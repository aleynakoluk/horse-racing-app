{"ast":null,"code":"export default {\n  name: 'HorseList',\n  data() {\n    return {\n      horsesPerPage: 20,\n      scrollOffset: 0\n    };\n  },\n  computed: {\n    horses() {\n      return this.$store.state.horses;\n    },\n    displayedHorses() {\n      // Sort horses by id (1-20)\n      return this.sortedHorses.slice(this.scrollOffset, this.scrollOffset + this.horsesPerPage);\n    },\n    sortedHorses() {\n      // Sort horses by id (1-20)\n      return this.horses.sort((a, b) => a.id - b.id);\n    }\n  },\n  methods: {\n    handleScroll() {\n      const container = this.$el.querySelector('.horse-list');\n      // Calculate scroll position\n      const scrollPosition = container.scrollTop + container.clientHeight;\n      // Check if scrolled to the bottom\n      if (scrollPosition >= container.scrollHeight) {\n        // Load more horses\n        this.scrollOffset += this.horsesPerPage;\n      }\n    },\n    fetchInitialHorses() {\n      // Normally you would fetch horses from a store or API\n      // For demonstration, let's assume you have an array of horses\n      const horses = [{\n        id: 1,\n        condition: 'Good',\n        color: 'Brown'\n      }, {\n        id: 2,\n        condition: 'Excellent',\n        color: 'Black'\n      }, {\n        id: 3,\n        condition: 'Fair',\n        color: 'White'\n      }\n      // Add more horses as needed\n      ];\n\n      // Set horses in the store or pass as props\n      this.$store.dispatch('setHorses', horses);\n    }\n  },\n  mounted() {\n    this.fetchInitialHorses();\n  }\n};","map":{"version":3,"names":["name","data","horsesPerPage","scrollOffset","computed","horses","$store","state","displayedHorses","sortedHorses","slice","sort","a","b","id","methods","handleScroll","container","$el","querySelector","scrollPosition","scrollTop","clientHeight","scrollHeight","fetchInitialHorses","condition","color","dispatch","mounted"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/components/HorseList.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"horse-list\">\n      <table>\n        <thead>\n          <tr>\n            <th colspan=\"3\" class=\"table-title\">Horse List (1-20)</th>\n          </tr>\n          <tr>\n            <th>Number</th>\n            <th>Condition</th>\n            <th>Color</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(horse, index) in displayedHorses\" :key=\"index\">\n            <td>{{ horse.id }}</td>\n            <td>{{ horse.condition }}</td>\n            <td>\n              <span :style=\"{ color: horse.color }\">\n                {{ horse.color }}\n              </span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HorseList',\n  data() {\n    return {\n      horsesPerPage: 20,\n      scrollOffset: 0\n    };\n  },\n  computed: {\n    horses() {\n      return this.$store.state.horses;\n    },\n    displayedHorses() {\n      // Sort horses by id (1-20)\n      return this.sortedHorses.slice(this.scrollOffset, this.scrollOffset + this.horsesPerPage);\n    },\n    sortedHorses() {\n      // Sort horses by id (1-20)\n      return this.horses.sort((a, b) => a.id - b.id);\n    }\n  },\n  methods: {\n    handleScroll() {\n      const container = this.$el.querySelector('.horse-list');\n      // Calculate scroll position\n      const scrollPosition = container.scrollTop + container.clientHeight;\n      // Check if scrolled to the bottom\n      if (scrollPosition >= container.scrollHeight) {\n        // Load more horses\n        this.scrollOffset += this.horsesPerPage;\n      }\n    },\n    fetchInitialHorses() {\n      // Normally you would fetch horses from a store or API\n      // For demonstration, let's assume you have an array of horses\n      const horses = [\n        { id: 1, condition: 'Good', color: 'Brown' },\n        { id: 2, condition: 'Excellent', color: 'Black' },\n        { id: 3, condition: 'Fair', color: 'White' },\n        // Add more horses as needed\n      ];\n\n      // Set horses in the store or pass as props\n      this.$store.dispatch('setHorses', horses);\n    }\n  },\n  mounted() {\n    this.fetchInitialHorses();\n  }\n};\n</script>\n\n<style scoped>\n.container {\n  text-align: left;\n  font-family: 'Arial, sans-serif';\n  background: grey;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 10px;\n  width: 300px;\n  height: 400px; /* Adjust height as needed */\n  overflow-y: scroll; /* Always show scrollbar */\n  overflow-x: hidden; /* Hide horizontal scrollbar */\n}\n\n.container::-webkit-scrollbar {\n  width: 12px; /* Scroll bar width */\n}\n\n.container::-webkit-scrollbar-thumb {\n  background-color: #888; /* Scroll bar color */\n  border-radius: 6px;\n  opacity: 1; /* Always show scrollbar */\n}\n\n.container:hover::-webkit-scrollbar-thumb {\n  background-color: transparent; /* Hide scrollbar on hover */\n}\n\n.horse-list {\n  overflow-y: scroll; /* Vertical scrollbar */\n  overflow-x: hidden; /* Hide horizontal scrollbar */\n  background-color: #f8f9fa; /* Background color */\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  width: 100%;\n  max-height: 100%; /* Match container height */\n}\n\n.horse-list::-webkit-scrollbar {\n  width: 12px; /* Scroll bar width */\n}\n\n.horse-list::-webkit-scrollbar-thumb {\n  background-color: #888; /* Scroll bar color */\n  border-radius: 6px;\n  opacity: 1; /* Always show scrollbar */\n}\n\n.table-title {\n  background-color: yellow; /* Title background color */\n  color: #333;\n  text-align: center;\n  padding: 8px 16px;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  position: sticky; /* Sticky position */\n  top: 0; /* Stick to the top */\n  z-index: 1; /* Z-index */\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\n\nth, td {\n  text-align: left;\n  padding: 8px;\n  border: 1px solid #ddd;\n}\n\nth {\n  background-color: #f2f2f2;\n  border-bottom: 1px solid #ddd;\n}\n</style>\n"],"mappings":"AA+BA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,EAAE;MACjBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,MAAM;IACjC,CAAC;IACDG,eAAeA,CAAA,EAAG;MAChB;MACA,OAAO,IAAI,CAACC,YAAY,CAACC,KAAK,CAAC,IAAI,CAACP,YAAY,EAAE,IAAI,CAACA,YAAW,GAAI,IAAI,CAACD,aAAa,CAAC;IAC3F,CAAC;IACDO,YAAYA,CAAA,EAAG;MACb;MACA,OAAO,IAAI,CAACJ,MAAM,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,EAAC,GAAID,CAAC,CAACC,EAAE,CAAC;IAChD;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,MAAMC,SAAQ,GAAI,IAAI,CAACC,GAAG,CAACC,aAAa,CAAC,aAAa,CAAC;MACvD;MACA,MAAMC,cAAa,GAAIH,SAAS,CAACI,SAAQ,GAAIJ,SAAS,CAACK,YAAY;MACnE;MACA,IAAIF,cAAa,IAAKH,SAAS,CAACM,YAAY,EAAE;QAC5C;QACA,IAAI,CAACpB,YAAW,IAAK,IAAI,CAACD,aAAa;MACzC;IACF,CAAC;IACDsB,kBAAkBA,CAAA,EAAG;MACnB;MACA;MACA,MAAMnB,MAAK,GAAI,CACb;QAAES,EAAE,EAAE,CAAC;QAAEW,SAAS,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAQ,CAAC,EAC5C;QAAEZ,EAAE,EAAE,CAAC;QAAEW,SAAS,EAAE,WAAW;QAAEC,KAAK,EAAE;MAAQ,CAAC,EACjD;QAAEZ,EAAE,EAAE,CAAC;QAAEW,SAAS,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAQ;MAC3C;MAAA,CACD;;MAED;MACA,IAAI,CAACpB,MAAM,CAACqB,QAAQ,CAAC,WAAW,EAAEtB,MAAM,CAAC;IAC3C;EACF,CAAC;EACDuB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACJ,kBAAkB,CAAC,CAAC;EAC3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}