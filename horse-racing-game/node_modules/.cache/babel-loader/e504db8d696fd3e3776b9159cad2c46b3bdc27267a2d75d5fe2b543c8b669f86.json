{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport { createStore } from 'vuex';\nconst LOCAL_STORAGE_KEY = 'horse-racing-game';\nexport default createStore({\n  state: {\n    horses: [],\n    raceSchedule: [],\n    raceInterval: null\n  },\n  mutations: {\n    setHorses(state, horses) {\n      state.horses = horses;\n    },\n    setRaceSchedule(state, schedule) {\n      state.raceSchedule = schedule;\n    },\n    updateHorsePosition(state, {\n      horseId,\n      position\n    }) {\n      const horse = state.horses.find(h => h.id === horseId);\n      if (horse) {\n        horse.position = position;\n      }\n    },\n    resetHorsePositions(state) {\n      state.horses.forEach(horse => {\n        horse.position = 0;\n      });\n    },\n    setRaceInterval(state, interval) {\n      state.raceInterval = interval;\n    },\n    clearRaceInterval(state) {\n      if (state.raceInterval) {\n        clearInterval(state.raceInterval);\n        state.raceInterval = null;\n      }\n    }\n  },\n  actions: {\n    async generateHorses({\n      commit\n    }) {\n      let storedHorses = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n      if (!storedHorses) {\n        storedHorses = generateHorses();\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(storedHorses));\n      }\n      commit('setHorses', storedHorses);\n      const schedule = generateRaceSchedule(storedHorses);\n      commit('setRaceSchedule', schedule);\n    },\n    async startRace({\n      commit\n    }) {\n      commit('resetHorsePositions');\n      commit('clearRaceInterval');\n    },\n    updateHorsePosition({\n      commit\n    }, payload) {\n      commit('updateHorsePosition', payload);\n    }\n  }\n});\nfunction generateHorses() {\n  const horses = [];\n  for (let i = 1; i <= 20; i++) {\n    horses.push({\n      id: i,\n      color: getRandomColor(),\n      condition: Math.floor(Math.random() * 100) + 1,\n      position: 0,\n      image: require(`@/assets/horse${i}.png`)\n    });\n  }\n  return horses;\n}\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\nfunction generateRaceSchedule(horses) {\n  const distances = [1200, 1400, 1600, 1800, 2000, 2200];\n  const schedule = distances.map(distance => {\n    const selectedHorses = [];\n    const horseIds = new Set();\n    for (let i = 1; i <= 10; i++) {\n      let horse;\n      do {\n        horse = horses[Math.floor(Math.random() * horses.length)];\n      } while (horseIds.has(horse.id));\n      selectedHorses.push(horse);\n      horseIds.add(horse.id);\n    }\n    return {\n      distance,\n      horses: selectedHorses\n    };\n  });\n  return schedule;\n}","map":{"version":3,"names":["createStore","LOCAL_STORAGE_KEY","state","horses","raceSchedule","raceInterval","mutations","setHorses","setRaceSchedule","schedule","updateHorsePosition","horseId","position","horse","find","h","id","resetHorsePositions","forEach","setRaceInterval","interval","clearRaceInterval","clearInterval","actions","generateHorses","commit","storedHorses","JSON","parse","localStorage","getItem","setItem","stringify","generateRaceSchedule","startRace","payload","i","push","color","getRandomColor","condition","Math","floor","random","image","require","letters","distances","map","distance","selectedHorses","horseIds","Set","length","has","add"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\n\nconst LOCAL_STORAGE_KEY = 'horse-racing-game';\n\nexport default createStore({\n  state: {\n    horses: [],\n    raceSchedule: [],\n    raceInterval: null,\n  },\n  mutations: {\n    setHorses(state, horses) {\n      state.horses = horses;\n    },\n    setRaceSchedule(state, schedule) {\n      state.raceSchedule = schedule;\n    },\n    updateHorsePosition(state, { horseId, position }) {\n      const horse = state.horses.find(h => h.id === horseId);\n      if (horse) {\n        horse.position = position;\n      }\n    },\n    resetHorsePositions(state) {\n      state.horses.forEach(horse => {\n        horse.position = 0;\n      });\n    },\n    setRaceInterval(state, interval) {\n      state.raceInterval = interval;\n    },\n    clearRaceInterval(state) {\n      if (state.raceInterval) {\n        clearInterval(state.raceInterval);\n        state.raceInterval = null;\n      }\n    },\n  },\n  actions: {\n    async generateHorses({ commit }) {\n      let storedHorses = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n      if (!storedHorses) {\n        storedHorses = generateHorses();\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(storedHorses));\n      }\n      commit('setHorses', storedHorses);\n      const schedule = generateRaceSchedule(storedHorses);\n      commit('setRaceSchedule', schedule);\n    },\n    async startRace({ commit }) {\n      commit('resetHorsePositions');\n      commit('clearRaceInterval');\n    },\n    updateHorsePosition({ commit }, payload) {\n      commit('updateHorsePosition', payload);\n    },\n  },\n});\n\nfunction generateHorses() {\n  const horses = [];\n  for (let i = 1; i <= 20; i++) {\n    horses.push({\n      id: i,\n      color: getRandomColor(),\n      condition: Math.floor(Math.random() * 100) + 1,\n      position: 0,\n      image: require(`@/assets/horse${i}.png`),\n    });\n  }\n  return horses;\n}\n\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nfunction generateRaceSchedule(horses) {\n  const distances = [1200, 1400, 1600, 1800, 2000, 2200];\n  const schedule = distances.map(distance => {\n    const selectedHorses = [];\n    const horseIds = new Set();\n\n    for (let i = 1; i <= 10; i++) {\n      let horse;\n      do {\n        horse = horses[Math.floor(Math.random() * horses.length)];\n      } while (horseIds.has(horse.id));\n      selectedHorses.push(horse);\n      horseIds.add(horse.id);\n    }\n\n    return {\n      distance,\n      horses: selectedHorses,\n    };\n  });\n  return schedule;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}