{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport { createStore } from 'vuex';\n\n// Function to generate horses with random attributes\nfunction generateHorses() {\n  const horses = [];\n  const colorNames = [\"Red\", \"Blue\", \"Green\", \"Yellow\", \"Orange\", \"Purple\", \"Pink\", \"Brown\", \"Black\", \"White\", \"Gray\", \"Cyan\", \"Magenta\", \"Lime\", \"Teal\", \"Indigo\", \"Maroon\", \"Navy\", \"Turquoise\", \"Gold\", \"Silver\"];\n  for (let i = 1; i <= 20; i++) {\n    horses.push({\n      id: i,\n      color: colorNames[Math.floor(Math.random() * colorNames.length)],\n      condition: Math.floor(Math.random() * 100) + 1,\n      position: 0,\n      image: require(`@/assets/horse${i}.png`) // Assuming `@/` is your Vue CLI alias\n    });\n  }\n  return horses;\n}\n\n// Function to generate race schedule based on horses\nfunction generateRaceSchedule(horses) {\n  const distances = [1200, 1400, 1600, 1800, 2000, 2200];\n  const schedule = distances.map(distance => {\n    const selectedHorses = [];\n    const horseIds = new Set();\n    for (let i = 1; i <= 10; i++) {\n      let horse;\n      do {\n        horse = horses[Math.floor(Math.random() * horses.length)];\n      } while (horseIds.has(horse.id));\n      selectedHorses.push(horse);\n      horseIds.add(horse.id);\n    }\n    return {\n      distance,\n      horses: selectedHorses\n    };\n  });\n  return schedule;\n}\nconst LOCAL_STORAGE_KEY = 'horse-racing-game';\nexport default createStore({\n  state: {\n    horses: [],\n    raceSchedule: [],\n    raceResults: []\n  },\n  mutations: {\n    setHorses(state, horses) {\n      state.horses = horses;\n    },\n    setRaceSchedule(state, schedule) {\n      state.raceSchedule = schedule;\n    },\n    updateHorsePosition(state, {\n      horseId,\n      position\n    }) {\n      const horse = state.horses.find(h => h.id === horseId);\n      if (horse) {\n        horse.position = position;\n      }\n    },\n    addRaceResult(state, result) {\n      state.raceResults.push(result);\n    },\n    clearRaceResults(state) {\n      state.raceResults = [];\n    }\n  },\n  actions: {\n    generateHorses({\n      commit\n    }) {\n      const storedHorses = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n      if (storedHorses) {\n        commit('setHorses', storedHorses);\n      } else {\n        const horses = generateHorses();\n        commit('setHorses', horses);\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(horses));\n      }\n    },\n    startRace({\n      commit,\n      state\n    }) {\n      commit('clearRaceResults');\n      const schedule = generateRaceSchedule(state.horses);\n      commit('setRaceSchedule', schedule);\n      schedule.forEach((race, index) => {\n        setTimeout(() => {\n          race.horses.forEach(horse => {\n            const newPosition = horse.position + Math.random() * 10;\n            commit('updateHorsePosition', {\n              horseId: horse.id,\n              position: newPosition\n            });\n          });\n          const winner = race.horses.reduce((prev, current) => prev.position > current.position ? prev : current);\n          const result = `Winner: Horse ${winner.id}`;\n          commit('addRaceResult', result);\n        }, index * 5000); // Start each race 5 seconds apart\n      });\n    }\n  }\n});","map":{"version":3,"names":["createStore","generateHorses","horses","colorNames","i","push","id","color","Math","floor","random","length","condition","position","image","require","generateRaceSchedule","distances","schedule","map","distance","selectedHorses","horseIds","Set","horse","has","add","LOCAL_STORAGE_KEY","state","raceSchedule","raceResults","mutations","setHorses","setRaceSchedule","updateHorsePosition","horseId","find","h","addRaceResult","result","clearRaceResults","actions","commit","storedHorses","JSON","parse","localStorage","getItem","setItem","stringify","startRace","forEach","race","index","setTimeout","newPosition","winner","reduce","prev","current"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\n\n// Function to generate horses with random attributes\nfunction generateHorses() {\n  const horses = [];\n  const colorNames = [\n    \"Red\", \"Blue\", \"Green\", \"Yellow\", \"Orange\", \"Purple\", \"Pink\", \n    \"Brown\", \"Black\", \"White\", \"Gray\", \"Cyan\", \"Magenta\", \"Lime\", \n    \"Teal\", \"Indigo\", \"Maroon\", \"Navy\", \"Turquoise\", \"Gold\", \"Silver\"\n  ];\n\n  for (let i = 1; i <= 20; i++) {\n    horses.push({\n      id: i,\n      color: colorNames[Math.floor(Math.random() * colorNames.length)],\n      condition: Math.floor(Math.random() * 100) + 1,\n      position: 0,\n      image: require(`@/assets/horse${i}.png`), // Assuming `@/` is your Vue CLI alias\n    });\n  }\n  return horses;\n}\n\n// Function to generate race schedule based on horses\nfunction generateRaceSchedule(horses) {\n  const distances = [1200, 1400, 1600, 1800, 2000, 2200];\n  const schedule = distances.map(distance => {\n    const selectedHorses = [];\n    const horseIds = new Set();\n\n    for (let i = 1; i <= 10; i++) {\n      let horse;\n      do {\n        horse = horses[Math.floor(Math.random() * horses.length)];\n      } while (horseIds.has(horse.id));\n      selectedHorses.push(horse);\n      horseIds.add(horse.id);\n    }\n\n    return {\n      distance,\n      horses: selectedHorses,\n    };\n  });\n  return schedule;\n}\n\nconst LOCAL_STORAGE_KEY = 'horse-racing-game';\n\nexport default createStore({\n  state: {\n    horses: [],\n    raceSchedule: [],\n    raceResults: [],\n  },\n  mutations: {\n    setHorses(state, horses) {\n      state.horses = horses;\n    },\n    setRaceSchedule(state, schedule) {\n      state.raceSchedule = schedule;\n    },\n    updateHorsePosition(state, { horseId, position }) {\n      const horse = state.horses.find(h => h.id === horseId);\n      if (horse) {\n        horse.position = position;\n      }\n    },\n    addRaceResult(state, result) {\n      state.raceResults.push(result);\n    },\n    clearRaceResults(state) {\n      state.raceResults = [];\n    },\n  },\n  actions: {\n    generateHorses({ commit }) {\n      const storedHorses = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n      if (storedHorses) {\n        commit('setHorses', storedHorses);\n      } else {\n        const horses = generateHorses();\n        commit('setHorses', horses);\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(horses));\n      }\n    },\n    startRace({ commit, state }) {\n      commit('clearRaceResults');\n      const schedule = generateRaceSchedule(state.horses);\n      commit('setRaceSchedule', schedule);\n\n      schedule.forEach((race, index) => {\n        setTimeout(() => {\n          race.horses.forEach(horse => {\n            const newPosition = horse.position + Math.random() * 10;\n            commit('updateHorsePosition', { horseId: horse.id, position: newPosition });\n          });\n          const winner = race.horses.reduce((prev, current) => (prev.position > current.position) ? prev : current);\n          const result = `Winner: Horse ${winner.id}`;\n          commit('addRaceResult', result);\n        }, index * 5000); // Start each race 5 seconds apart\n      });\n    },\n  },\n});\n"],"mappings":";;;;;;;;AAAA,SAASA,WAAW,QAAQ,MAAM;;AAElC;AACA,SAASC,cAAcA,CAAA,EAAG;EACxB,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAMC,UAAU,GAAG,CACjB,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAC5D,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAC5D,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,CAClE;EAED,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC5BF,MAAM,CAACG,IAAI,CAAC;MACVC,EAAE,EAAEF,CAAC;MACLG,KAAK,EAAEJ,UAAU,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGP,UAAU,CAACQ,MAAM,CAAC,CAAC;MAChEC,SAAS,EAAEJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC;MAC9CG,QAAQ,EAAE,CAAC;MACXC,KAAK,EAAEC,OAAO,CAAC,iBAAiBX,CAAC,MAAM,CAAC,CAAE;IAC5C,CAAC,CAAC;EACJ;EACA,OAAOF,MAAM;AACf;;AAEA;AACA,SAASc,oBAAoBA,CAACd,MAAM,EAAE;EACpC,MAAMe,SAAS,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;EACtD,MAAMC,QAAQ,GAAGD,SAAS,CAACE,GAAG,CAACC,QAAQ,IAAI;IACzC,MAAMC,cAAc,GAAG,EAAE;IACzB,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAAC,CAAC;IAE1B,KAAK,IAAInB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC5B,IAAIoB,KAAK;MACT,GAAG;QACDA,KAAK,GAAGtB,MAAM,CAACM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGR,MAAM,CAACS,MAAM,CAAC,CAAC;MAC3D,CAAC,QAAQW,QAAQ,CAACG,GAAG,CAACD,KAAK,CAAClB,EAAE,CAAC;MAC/Be,cAAc,CAAChB,IAAI,CAACmB,KAAK,CAAC;MAC1BF,QAAQ,CAACI,GAAG,CAACF,KAAK,CAAClB,EAAE,CAAC;IACxB;IAEA,OAAO;MACLc,QAAQ;MACRlB,MAAM,EAAEmB;IACV,CAAC;EACH,CAAC,CAAC;EACF,OAAOH,QAAQ;AACjB;AAEA,MAAMS,iBAAiB,GAAG,mBAAmB;AAE7C,eAAe3B,WAAW,CAAC;EACzB4B,KAAK,EAAE;IACL1B,MAAM,EAAE,EAAE;IACV2B,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE;EACf,CAAC;EACDC,SAAS,EAAE;IACTC,SAASA,CAACJ,KAAK,EAAE1B,MAAM,EAAE;MACvB0B,KAAK,CAAC1B,MAAM,GAAGA,MAAM;IACvB,CAAC;IACD+B,eAAeA,CAACL,KAAK,EAAEV,QAAQ,EAAE;MAC/BU,KAAK,CAACC,YAAY,GAAGX,QAAQ;IAC/B,CAAC;IACDgB,mBAAmBA,CAACN,KAAK,EAAE;MAAEO,OAAO;MAAEtB;IAAS,CAAC,EAAE;MAChD,MAAMW,KAAK,GAAGI,KAAK,CAAC1B,MAAM,CAACkC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC/B,EAAE,KAAK6B,OAAO,CAAC;MACtD,IAAIX,KAAK,EAAE;QACTA,KAAK,CAACX,QAAQ,GAAGA,QAAQ;MAC3B;IACF,CAAC;IACDyB,aAAaA,CAACV,KAAK,EAAEW,MAAM,EAAE;MAC3BX,KAAK,CAACE,WAAW,CAACzB,IAAI,CAACkC,MAAM,CAAC;IAChC,CAAC;IACDC,gBAAgBA,CAACZ,KAAK,EAAE;MACtBA,KAAK,CAACE,WAAW,GAAG,EAAE;IACxB;EACF,CAAC;EACDW,OAAO,EAAE;IACPxC,cAAcA,CAAC;MAAEyC;IAAO,CAAC,EAAE;MACzB,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACpB,iBAAiB,CAAC,CAAC;MACxE,IAAIgB,YAAY,EAAE;QAChBD,MAAM,CAAC,WAAW,EAAEC,YAAY,CAAC;MACnC,CAAC,MAAM;QACL,MAAMzC,MAAM,GAAGD,cAAc,CAAC,CAAC;QAC/ByC,MAAM,CAAC,WAAW,EAAExC,MAAM,CAAC;QAC3B4C,YAAY,CAACE,OAAO,CAACrB,iBAAiB,EAAEiB,IAAI,CAACK,SAAS,CAAC/C,MAAM,CAAC,CAAC;MACjE;IACF,CAAC;IACDgD,SAASA,CAAC;MAAER,MAAM;MAAEd;IAAM,CAAC,EAAE;MAC3Bc,MAAM,CAAC,kBAAkB,CAAC;MAC1B,MAAMxB,QAAQ,GAAGF,oBAAoB,CAACY,KAAK,CAAC1B,MAAM,CAAC;MACnDwC,MAAM,CAAC,iBAAiB,EAAExB,QAAQ,CAAC;MAEnCA,QAAQ,CAACiC,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAChCC,UAAU,CAAC,MAAM;UACfF,IAAI,CAAClD,MAAM,CAACiD,OAAO,CAAC3B,KAAK,IAAI;YAC3B,MAAM+B,WAAW,GAAG/B,KAAK,CAACX,QAAQ,GAAGL,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE;YACvDgC,MAAM,CAAC,qBAAqB,EAAE;cAAEP,OAAO,EAAEX,KAAK,CAAClB,EAAE;cAAEO,QAAQ,EAAE0C;YAAY,CAAC,CAAC;UAC7E,CAAC,CAAC;UACF,MAAMC,MAAM,GAAGJ,IAAI,CAAClD,MAAM,CAACuD,MAAM,CAAC,CAACC,IAAI,EAAEC,OAAO,KAAMD,IAAI,CAAC7C,QAAQ,GAAG8C,OAAO,CAAC9C,QAAQ,GAAI6C,IAAI,GAAGC,OAAO,CAAC;UACzG,MAAMpB,MAAM,GAAG,iBAAiBiB,MAAM,CAAClD,EAAE,EAAE;UAC3CoC,MAAM,CAAC,eAAe,EAAEH,MAAM,CAAC;QACjC,CAAC,EAAEc,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC;IACJ;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}