{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-cf621e90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Race Schedule\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"race-schedule\"\n};\nconst _hoisted_4 = {\n  class: \"table-container\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Position\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Horse ID\")])], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.raceSchedule, (race, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"race\",\n      key: index\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(race.distance) + \"m Race\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"table\", null, [_hoisted_5, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(race.horses.slice(0, 20), (horse, horseIndex) => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: horseIndex\n      }, [_createElementVNode(\"td\", null, _toDisplayString(horseIndex + 1), 1 /* TEXT */), _createElementVNode(\"td\", {\n        style: _normalizeStyle({\n          color: horse.color\n        })\n      }, \"Horse \" + _toDisplayString(horse.id), 5 /* TEXT, STYLE */)]);\n    }), 128 /* KEYED_FRAGMENT */))])])])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$options","raceSchedule","race","index","key","_toDisplayString","distance","_hoisted_4","_hoisted_5","horses","slice","horse","horseIndex","style","_normalizeStyle","color","id"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/components/RaceSchedule.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h2>Race Schedule</h2>\n    <div class=\"race-schedule\">\n      <div class=\"race\" v-for=\"(race, index) in raceSchedule\" :key=\"index\">\n        <h3>{{ race.distance }}m Race</h3>\n        <div class=\"table-container\">\n          <table>\n            <thead>\n              <tr>\n                <th>Position</th>\n                <th>Horse ID</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(horse, horseIndex) in race.horses.slice(0, 20)\" :key=\"horseIndex\">\n                <td>{{ horseIndex + 1 }}</td>\n                <td :style=\"{ color: horse.color }\">Horse {{ horse.id }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  computed: {\n    raceSchedule() {\n      return this.$store.state.raceSchedule;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.container {\n  text-align: center;\n  margin: 20px;\n  font-family: 'Arial, sans-serif';\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center; /* İçeriği ortala */\n}\n\nh2 {\n  color: #333;\n  margin-bottom: 10px;\n}\n\n.race-schedule {\n  display: flex;\n  flex-wrap: wrap; /* Yarışları alt alta sıralamak için wrap özelliği kullanılır */\n  justify-content: flex-end; /* Yarışları sağa hizala */\n  gap: 20px; /* Tablolar arası boşluk */\n}\n\n.race {\n  width: 100%; /* Tam sayfa genişliği alacak şekilde ayarlandı */\n  margin-bottom: 20px; /* Altta boşluk bırak */\n}\n\n.table-container {\n  max-height: 350px; /* Maksimum yükseklik ayarlayabilirsiniz */\n  overflow-y: auto; /* Dikey scrollbar ekle */\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  background-color: #fff; /* Tablonun arka plan rengi */\n}\n\nth, td {\n  text-align: right; /* Sağa hizala */\n  padding: 8px;\n  border: 1px solid #ddd;\n  white-space: nowrap; /* Uzun içerikler için satır sonu kırılmasını önle */\n}\n\nth {\n  background-color: #f2f2f2;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;gEACpBC,mBAAA,CAAsB,YAAlB,eAAa;;EACZD,KAAK,EAAC;AAAe;;EAGjBA,KAAK,EAAC;AAAiB;gEAExBC,mBAAA,CAKQ,gB,aAJNA,mBAAA,CAGK,a,aAFHA,mBAAA,CAAiB,YAAb,UAAQ,G,aACZA,mBAAA,CAAiB,YAAb,UAAQ,E;;uBAV1BC,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJC,UAAsB,EACtBH,mBAAA,CAoBM,OApBNI,UAoBM,I,kBAnBJH,mBAAA,CAkBMI,SAAA,QAtBZC,WAAA,CAIgDC,QAAA,CAAAC,YAAY,EAJ5D,CAIgCC,IAAI,EAAEC,KAAK;yBAArCT,mBAAA,CAkBM;MAlBDF,KAAK,EAAC,MAAM;MAAwCY,GAAG,EAAED;QAC5DV,mBAAA,CAAkC,YAAAY,gBAAA,CAA3BH,IAAI,CAACI,QAAQ,IAAG,QAAM,iBAC7Bb,mBAAA,CAeM,OAfNc,UAeM,GAdJd,mBAAA,CAaQ,gBAZNe,UAKQ,EACRf,mBAAA,CAKQ,iB,kBAJNC,mBAAA,CAGKI,SAAA,QAlBnBC,WAAA,CAegDG,IAAI,CAACO,MAAM,CAACC,KAAK,SAfjE,CAe0BC,KAAK,EAAEC,UAAU;2BAA7BlB,mBAAA,CAGK;QAHwDU,GAAG,EAAEQ;MAAU,IAC1EnB,mBAAA,CAA6B,YAAAY,gBAAA,CAAtBO,UAAU,sBACjBnB,mBAAA,CAA6D;QAAxDoB,KAAK,EAjB1BC,eAAA;UAAAC,KAAA,EAiBqCJ,KAAK,CAACI;QAAK;SAAI,QAAM,GAAAV,gBAAA,CAAGM,KAAK,CAACK,EAAE,wB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}