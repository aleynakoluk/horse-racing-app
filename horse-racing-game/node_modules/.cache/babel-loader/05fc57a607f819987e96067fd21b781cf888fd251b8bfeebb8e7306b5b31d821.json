{"ast":null,"code":"import { mapState, mapActions } from 'vuex';\nexport default {\n  name: 'HorseRace',\n  computed: {\n    // Vuex state bağlantısı\n    ...mapState(['raceSchedule']),\n    // 10 şerit numarasını oluştur\n    lanes() {\n      return Array.from({\n        length: 10\n      }, (_, i) => i + 1);\n    }\n  },\n  mounted() {\n    // Atları oluştur ve yarışı başlat\n    this.generateHorses();\n    this.startRace();\n  },\n  methods: {\n    // Vuex actions bağlantısı\n    ...mapActions(['generateHorses', 'startRace']),\n    // Belirli bir şeritteki atları getir\n    horsesInLane(race, lane) {\n      return race.horses.slice((lane - 1) * 10, lane * 10);\n    },\n    // At animasyonu için gecikme hesaplama\n    calculateAnimationDelay(horseIndex) {\n      return horseIndex * 0.5;\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapActions","name","computed","lanes","Array","from","length","_","i","mounted","generateHorses","startRace","methods","horsesInLane","race","lane","horses","slice","calculateAnimationDelay","horseIndex"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/components/HorseRace.vue"],"sourcesContent":["<template>\n  <div class=\"race-results\">\n    <!-- Her yarış için döngü -->\n    <div v-for=\"(race, index) in raceSchedule\" :key=\"index\" class=\"race-section\">\n      <!-- Yarış başlığı -->\n      <h5>{{ index + 1 }}. Lap - {{ race.distance }}m</h5>\n\n      <!-- Yarış pisti -->\n      <div class=\"race-track\">\n        <!-- Şeritler için döngü -->\n        <div v-for=\"lane in lanes\" :key=\"lane\" class=\"lane\">\n          <!-- Şerit numarası -->\n          <div class=\"lane-number\">{{ lane }}</div>\n\n          <!-- Atlar için döngü -->\n          <div v-for=\"(horse, horseIndex) in horsesInLane(race, lane)\" :key=\"horse.id\" class=\"horse\" :style=\"{ left: horse.position + '%', animationDelay: calculateAnimationDelay(horseIndex) + 's' }\">\n            <!-- At resmi ve ismi -->\n            <img :src=\"horse.image\" :alt=\"'Horse ' + horse.id\" class=\"horse-img\">\n            <span>Horse {{ horse.id }}</span>\n          </div>\n          \n          <!-- Noktalı çizgi -->\n          <div class=\"dotted-line\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex';\n\nexport default {\n  name: 'HorseRace',\n  computed: {\n    // Vuex state bağlantısı\n    ...mapState(['raceSchedule']),\n    \n    // 10 şerit numarasını oluştur\n    lanes() {\n      return Array.from({ length: 10 }, (_, i) => i + 1);\n    }\n  },\n  mounted() {\n    // Atları oluştur ve yarışı başlat\n    this.generateHorses();\n    this.startRace();\n  },\n  methods: {\n    // Vuex actions bağlantısı\n    ...mapActions(['generateHorses', 'startRace']),\n    \n    // Belirli bir şeritteki atları getir\n    horsesInLane(race, lane) {\n      return race.horses.slice((lane - 1) * 10, lane * 10);\n    },\n    \n    // At animasyonu için gecikme hesaplama\n    calculateAnimationDelay(horseIndex) {\n      return horseIndex * 0.5;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.race-results {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  justify-content: flex-start;\n  align-items: center;\n  width: 450px; /* Container genişliği */\n  height: 600px; /* Container yüksekliği */\n  overflow-y: auto; /* Dikey kaydırma */\n  padding: 10px;\n  border-radius: 4px;\n}\n\n.race-section {\n  width: 100%; /* Tam genişlik */\n  padding: 20px;\n  border-radius: 4px;\n}\n\n.race-track {\n  position: relative;\n  width: 100%;\n  height: 500px; /* Pist yüksekliği */\n  margin-top: 20px;\n}\n\n.lane {\n  position: relative;\n  width: 100%;\n  height: 60px; /* Her şerit yüksekliği */\n  border-bottom: 1px dashed #000; /* Noktalı çizgi */\n  display: flex;\n  align-items: center;\n}\n\n.lane-number {\n  width: 60px; /* Şerit numarası genişliği */\n  height: 40px; /* Şerit numarası yüksekliği */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: green; /* Arka plan rengi */\n  color: white; /* Yazı rengi */\n  font-weight: bold; /* Kalın font */\n  border: 1px solid white; /* Kenar çizgisi */\n  transform: rotate(-90deg); /* 90 derece döndürme */\n  position: absolute; /* Mutlak konumlandırma */\n  left: -50px; /* Sol kenar boşluğu */\n}\n\nh5 {\n  text-align: center; /* Ortaya hizalama */\n  color: red; /* Yazı rengi */\n}\n\n.horse {\n  position: relative;\n  width: 100%;\n  height: 50px; /* At yüksekliği */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-weight: bold;\n  animation: run linear 5s infinite; /* Koşu animasyonu */\n}\n\n.horse img {\n  width: 50px; /* At resmi genişliği */\n  height: auto; /* Otomatik yükseklik */\n  margin-right: 5px; /* Sağ kenar boşluğu */\n}\n\n.dotted-line {\n  width: 100%;\n  height: 2px; /* Noktalı çizgi yüksekliği */\n  background-color: #000; /* Arka plan rengi */\n  background-image: repeating-linear-gradient(to right, #000, #000 1px, transparent 1px, transparent 3px); /* Tekrarlayan çizgi deseni */\n  background-size: 4px 1px; /* Desen ölçeği */\n  margin-top: 5px; /* Üst kenar boşluğu */\n}\n\n@keyframes run {\n  from { left: 0%; }\n  to { left: 100%; }\n}\n</style>\n"],"mappings":"AA8BA,SAASA,QAAQ,EAAEC,UAAS,QAAS,MAAM;AAE3C,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,QAAQ,EAAE;IACR;IACA,GAAGH,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;IAE7B;IACAI,KAAKA,CAAA,EAAG;MACN,OAAOC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAA,GAAI,CAAC,CAAC;IACpD;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,cAAc,CAAC,CAAC;IACrB,IAAI,CAACC,SAAS,CAAC,CAAC;EAClB,CAAC;EACDC,OAAO,EAAE;IACP;IACA,GAAGZ,UAAU,CAAC,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;IAE9C;IACAa,YAAYA,CAACC,IAAI,EAAEC,IAAI,EAAE;MACvB,OAAOD,IAAI,CAACE,MAAM,CAACC,KAAK,CAAC,CAACF,IAAG,GAAI,CAAC,IAAI,EAAE,EAAEA,IAAG,GAAI,EAAE,CAAC;IACtD,CAAC;IAED;IACAG,uBAAuBA,CAACC,UAAU,EAAE;MAClC,OAAOA,UAAS,GAAI,GAAG;IACzB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}