{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport { createStore } from 'vuex';\n\n// Rastgele isimler listesi\nconst horseNames = ['Thunder', 'Lightning', 'Storm', 'Blaze', 'Shadow', 'Spirit', 'Majesty', 'Champion', 'Silver', 'Gold', 'Comet', 'Wind', 'Mystic', 'Starlight', 'Courage', 'Freedom', 'Victory', 'Flash', 'Valor', 'Glory'];\n\n// Atları oluşturacak fonksiyon\nfunction generateHorses() {\n  const horses = [];\n  for (let i = 0; i < horseNames.length; i++) {\n    horses.push({\n      id: i + 1,\n      // At ID'lerini 1'den başlayacak şekilde numaralandırıyoruz\n      name: horseNames[i],\n      color: getRandomColor(),\n      condition: Math.floor(Math.random() * 100) + 1,\n      position: 0,\n      image: require(`@/assets/horse${i + 1}.png`)\n    });\n  }\n  return horses;\n}\n\n// Rastgele renk oluşturacak fonksiyon\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\nexport default createStore({\n  state: {\n    horses: JSON.parse(localStorage.getItem('horses')) || [],\n    raceSchedule: [],\n    raceResults: []\n  },\n  mutations: {\n    setHorses(state, horses) {\n      state.horses = horses;\n      localStorage.setItem('horses', JSON.stringify(horses)); // Atları yerel depolamaya kaydet\n    },\n    setRaceSchedule(state, schedule) {\n      state.raceSchedule = schedule;\n    },\n    updateHorsePosition(state, {\n      horseId,\n      position\n    }) {\n      const horse = state.horses.find(h => h.id === horseId);\n      if (horse) {\n        horse.position = position;\n      }\n    },\n    addRaceResult(state, result) {\n      state.raceResults.push(result);\n    },\n    clearRaceResults(state) {\n      state.raceResults = [];\n    }\n  },\n  actions: {\n    generateHorses({\n      commit,\n      state\n    }) {\n      if (state.horses.length === 0) {\n        const horses = generateHorses();\n        commit('setHorses', horses);\n      }\n    },\n    startRace({\n      commit,\n      state\n    }) {\n      commit('clearRaceResults');\n      const schedule = generateRaceSchedule(state.horses);\n      commit('setRaceSchedule', schedule);\n      schedule.forEach((race, index) => {\n        setTimeout(() => {\n          race.horses.forEach(horse => {\n            const newPosition = horse.position + Math.random() * 10;\n            commit('updateHorsePosition', {\n              horseId: horse.id,\n              position: newPosition\n            });\n          });\n          const winner = race.horses.reduce((prev, current) => prev.position > current.position ? prev : current);\n          const result = `Winner: Horse ${winner.id}`;\n          commit('addRaceResult', result);\n        }, index * 5000); // Her yarışı 5 saniye arayla başlatır\n      });\n    }\n  }\n});\nfunction generateRaceSchedule(horses) {\n  const distances = [1200, 1400, 1600, 1800, 2000, 2200];\n  const schedule = distances.map(distance => {\n    const selectedHorses = [];\n    const horseIds = new Set();\n    for (let i = 1; i <= 10; i++) {\n      let horse;\n      do {\n        horse = horses[Math.floor(Math.random() * horses.length)];\n      } while (horseIds.has(horse.id));\n      selectedHorses.push(horse);\n      horseIds.add(horse.id);\n    }\n    return {\n      distance,\n      horses: selectedHorses\n    };\n  });\n  return schedule;\n}","map":{"version":3,"names":["createStore","horseNames","generateHorses","horses","i","length","push","id","name","color","getRandomColor","condition","Math","floor","random","position","image","require","letters","state","JSON","parse","localStorage","getItem","raceSchedule","raceResults","mutations","setHorses","setItem","stringify","setRaceSchedule","schedule","updateHorsePosition","horseId","horse","find","h","addRaceResult","result","clearRaceResults","actions","commit","startRace","generateRaceSchedule","forEach","race","index","setTimeout","newPosition","winner","reduce","prev","current","distances","map","distance","selectedHorses","horseIds","Set","has","add"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\n\n// Rastgele isimler listesi\nconst horseNames = [\n  'Thunder', 'Lightning', 'Storm', 'Blaze', 'Shadow', 'Spirit', 'Majesty',\n  'Champion', 'Silver', 'Gold', 'Comet', 'Wind', 'Mystic', 'Starlight',\n  'Courage', 'Freedom', 'Victory', 'Flash', 'Valor', 'Glory'\n];\n\n// Atları oluşturacak fonksiyon\nfunction generateHorses() {\n  const horses = [];\n  for (let i = 0; i < horseNames.length; i++) {\n    horses.push({\n      id: i + 1, // At ID'lerini 1'den başlayacak şekilde numaralandırıyoruz\n      name: horseNames[i],\n      color: getRandomColor(),\n      condition: Math.floor(Math.random() * 100) + 1,\n      position: 0,\n      image: require(`@/assets/horse${i + 1}.png`),\n    });\n  }\n  return horses;\n}\n\n// Rastgele renk oluşturacak fonksiyon\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nexport default createStore({\n  state: {\n    horses: JSON.parse(localStorage.getItem('horses')) || [],\n    raceSchedule: [],\n    raceResults: [],\n  },\n  mutations: {\n    setHorses(state, horses) {\n      state.horses = horses;\n      localStorage.setItem('horses', JSON.stringify(horses)); // Atları yerel depolamaya kaydet\n    },\n    setRaceSchedule(state, schedule) {\n      state.raceSchedule = schedule;\n    },\n    updateHorsePosition(state, { horseId, position }) {\n      const horse = state.horses.find(h => h.id === horseId);\n      if (horse) {\n        horse.position = position;\n      }\n    },\n    addRaceResult(state, result) {\n      state.raceResults.push(result);\n    },\n    clearRaceResults(state) {\n      state.raceResults = [];\n    },\n  },\n  actions: {\n    generateHorses({ commit, state }) {\n      if (state.horses.length === 0) {\n        const horses = generateHorses();\n        commit('setHorses', horses);\n      }\n    },\n    startRace({ commit, state }) {\n      commit('clearRaceResults');\n      const schedule = generateRaceSchedule(state.horses);\n      commit('setRaceSchedule', schedule);\n\n      schedule.forEach((race, index) => {\n        setTimeout(() => {\n          race.horses.forEach(horse => {\n            const newPosition = horse.position + Math.random() * 10;\n            commit('updateHorsePosition', { horseId: horse.id, position: newPosition });\n          });\n          const winner = race.horses.reduce((prev, current) => (prev.position > current.position) ? prev : current);\n          const result = `Winner: Horse ${winner.id}`;\n          commit('addRaceResult', result);\n        }, index * 5000); // Her yarışı 5 saniye arayla başlatır\n      });\n    },\n  },\n});\n\nfunction generateRaceSchedule(horses) {\n  const distances = [1200, 1400, 1600, 1800, 2000, 2200];\n  const schedule = distances.map(distance => {\n    const selectedHorses = [];\n    const horseIds = new Set();\n\n    for (let i = 1; i <= 10; i++) {\n      let horse;\n      do {\n        horse = horses[Math.floor(Math.random() * horses.length)];\n      } while (horseIds.has(horse.id));\n      selectedHorses.push(horse);\n      horseIds.add(horse.id);\n    }\n\n    return {\n      distance,\n      horses: selectedHorses,\n    };\n  });\n  return schedule;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}