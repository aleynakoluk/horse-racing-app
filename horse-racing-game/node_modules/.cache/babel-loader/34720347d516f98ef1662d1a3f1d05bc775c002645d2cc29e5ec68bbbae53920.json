{"ast":null,"code":"// // src/store/index.js\n// import { createStore } from 'vuex';\n\n// function generateHorses() {\n//   const horses = [];\n//   for (let i = 1; i <= 20; i++) {\n//     horses.push({\n//       id: i,\n//       color: getRandomColor(),\n//       condition: Math.floor(Math.random() * 100) + 1,\n//     });\n//   }\n//   return horses;\n// }\n\n// function getRandomColor() {\n//   const letters = '0123456789ABCDEF';\n//   let color = '#';\n//   for (let i = 0; i < 6; i++) {\n//     color += letters[Math.floor(Math.random() * 16)];\n//   }\n//   return color;\n// }\n\n// function generateRaceSchedule(horses) {\n//   const distances = [1200, 1400, 1600, 1800, 2000, 2200];\n//   const schedule = distances.map(distance => {\n//     const selectedHorses = [];\n//     const horseIds = new Set();\n//     while (selectedHorses.length < 10) {\n//       const horse = horses[Math.floor(Math.random() * horses.length)];\n//       if (!horseIds.has(horse.id)) {\n//         selectedHorses.push(horse);\n//         horseIds.add(horse.id);\n//       }\n//     }\n//     return {\n//       distance,\n//       horses: selectedHorses,\n//     };\n//   });\n//   return schedule;\n// }\n\n// export default createStore({\n//   state: {\n//     horses: [],\n//     raceSchedule: [],\n//     raceResults: [],\n//   },\n//   mutations: {\n//     setHorses(state, horses) {\n//       state.horses = horses;\n//     },\n//     setRaceSchedule(state, schedule) {\n//       state.raceSchedule = schedule;\n//     },\n//     addRaceResult(state, result) {\n//       state.raceResults.push(result);\n//     },\n//     clearRaceResults(state) {\n//       state.raceResults = [];\n//     },\n//   },\n//   actions: {\n//     generateHorses({ commit }) {\n//       const horses = generateHorses();\n//       commit('setHorses', horses);\n//     },\n//     startRace({ commit, state }) {\n//       commit('clearRaceResults');\n//       const schedule = generateRaceSchedule(state.horses);\n//       commit('setRaceSchedule', schedule);\n\n//       schedule.forEach((race, index) => {\n//         setTimeout(() => {\n//           const result = `Winner: Horse ${race.horses[0].id}`;\n//           commit('addRaceResult', result);\n//         }, index * 1000);\n//       });\n//     },\n//   },\n// });","map":{"version":3,"names":[],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/store/index.js"],"sourcesContent":["// // src/store/index.js\n// import { createStore } from 'vuex';\n\n// function generateHorses() {\n//   const horses = [];\n//   for (let i = 1; i <= 20; i++) {\n//     horses.push({\n//       id: i,\n//       color: getRandomColor(),\n//       condition: Math.floor(Math.random() * 100) + 1,\n//     });\n//   }\n//   return horses;\n// }\n\n// function getRandomColor() {\n//   const letters = '0123456789ABCDEF';\n//   let color = '#';\n//   for (let i = 0; i < 6; i++) {\n//     color += letters[Math.floor(Math.random() * 16)];\n//   }\n//   return color;\n// }\n\n// function generateRaceSchedule(horses) {\n//   const distances = [1200, 1400, 1600, 1800, 2000, 2200];\n//   const schedule = distances.map(distance => {\n//     const selectedHorses = [];\n//     const horseIds = new Set();\n//     while (selectedHorses.length < 10) {\n//       const horse = horses[Math.floor(Math.random() * horses.length)];\n//       if (!horseIds.has(horse.id)) {\n//         selectedHorses.push(horse);\n//         horseIds.add(horse.id);\n//       }\n//     }\n//     return {\n//       distance,\n//       horses: selectedHorses,\n//     };\n//   });\n//   return schedule;\n// }\n\n// export default createStore({\n//   state: {\n//     horses: [],\n//     raceSchedule: [],\n//     raceResults: [],\n//   },\n//   mutations: {\n//     setHorses(state, horses) {\n//       state.horses = horses;\n//     },\n//     setRaceSchedule(state, schedule) {\n//       state.raceSchedule = schedule;\n//     },\n//     addRaceResult(state, result) {\n//       state.raceResults.push(result);\n//     },\n//     clearRaceResults(state) {\n//       state.raceResults = [];\n//     },\n//   },\n//   actions: {\n//     generateHorses({ commit }) {\n//       const horses = generateHorses();\n//       commit('setHorses', horses);\n//     },\n//     startRace({ commit, state }) {\n//       commit('clearRaceResults');\n//       const schedule = generateRaceSchedule(state.horses);\n//       commit('setRaceSchedule', schedule);\n\n//       schedule.forEach((race, index) => {\n//         setTimeout(() => {\n//           const result = `Winner: Horse ${race.horses[0].id}`;\n//           commit('addRaceResult', result);\n//         }, index * 1000);\n//       });\n//     },\n//   },\n// });\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}