{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1531af65\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"race-result\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  colspan: \"2\",\n  class: \"table-title\"\n}, \"Result\")])], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  colspan: \"2\",\n  class: \"race-info\"\n};\nconst _hoisted_4 = {\n  class: \"table-container\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Position\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\")])], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"table\", null, [_hoisted_2, _createElementVNode(\"tbody\", null, [_createCommentVNode(\" Creating a table row for each race \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.raceSchedule, (race, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index,\n      class: \"right-align\"\n    }, [_createElementVNode(\"td\", _hoisted_3, [_createElementVNode(\"h3\", null, _toDisplayString(index + 1) + \"ST Lap - \" + _toDisplayString(race.distance) + \"m\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"table\", null, [_hoisted_5, _createElementVNode(\"tbody\", null, [_createCommentVNode(\" Sorting and displaying the top 20 horses for each race based on condition \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(race.horses.slice(0, 20).sort((a, b) => b.condition - a.condition), (horse, horseIndex) => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: horseIndex\n      }, [_createElementVNode(\"td\", null, _toDisplayString(horseIndex + 1), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.getHorseName(horse.id)), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))])])])])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","colspan","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_Fragment","_renderList","$options","raceSchedule","race","index","key","_hoisted_3","_toDisplayString","distance","_hoisted_4","_hoisted_5","horses","slice","sort","a","b","condition","horse","horseIndex","getHorseName","id"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/components/RaceResults.vue"],"sourcesContent":["<template>\n  <div class=\"race-result\">\n    <table>\n      <thead>\n        <tr>\n          <th colspan=\"2\" class=\"table-title\">Result</th>\n        </tr>\n      </thead>\n      <tbody>\n        <!-- Creating a table row for each race -->\n        <tr v-for=\"(race, index) in raceSchedule\" :key=\"index\" class=\"right-align\">\n          <td colspan=\"2\" class=\"race-info\">\n            <h3>{{ index + 1 }}ST Lap - {{ race.distance }}m</h3>\n            <div class=\"table-container\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>Position</th>\n                    <th>Name</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <!-- Sorting and displaying the top 20 horses for each race based on condition -->\n                  <tr v-for=\"(horse, horseIndex) in race.horses.slice(0, 20).sort((a, b) => b.condition - a.condition)\" :key=\"horseIndex\">\n                    <td>{{ horseIndex + 1 }}</td>\n                    <td>{{ getHorseName(horse.id) }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nexport default {\n  computed: {\n    // Getting the race schedule from Vuex state\n    raceSchedule() {\n      return this.$store.state.raceSchedule;\n    }\n  },\n  methods: {\n    // Get the name of the horse\n    getHorseName(horseId) {\n      const names = [\"Ekselans\", \"Herkül\", \"Prens\", \"Görkem\", \"Karamel\", \"Roswell\", \"Romeo\", \"Taffy\", \"Tekila\", \"Popcorn\", \"Sirius\", \"Uila\", \"Buddy\", \"Max\", \"Black Beauty\", \"Alfa\", \"Asalet\", \"Siyah İnci\", \"Abanoz\", \"Prenses\"];\n      return names[(horseId - 1) % names.length];\n    }\n  }\n};\n</script>\n\n<style scoped>\n.page-container {\n  display: block;\n  width: 100%;\n  position: absolute;\n  margin-top: 90px;\n  margin-bottom: 60px;\n  text-align: center; /* Öğeleri ortalamak için text-align kullanabilirsiniz */\n}\n\n.horse-race {\n  display: inline-block; /* İçerikleri merkezi hizalamak için inline-block kullanabilirsiniz */\n  width: 420px;\n  height: 730px;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  margin: 0 auto; /* Ortalamak için margin kullanabilirsiniz */\n}\n\n.race-section {\n  width: 390px;\n  border-radius: 4px;\n  padding-bottom: 70px;\n  margin-bottom: 20px; /* Her bir yarış bölümüne boşluk ekleyin */\n}\n\n.race-track {\n  position: relative;\n  width: 390px;\n  height: 510px;\n  margin-top: 20px;\n}\n\n.lane-top {\n  width: 100%;\n  height: 1px;\n  border-top: 1px dashed #000;\n}\n\n.lane {\n  position: relative;\n  width: 100%;\n  height: 50px;\n  border-bottom: 1px dashed #000;\n}\n\n.lane-number {\n  width: 50px;\n  height: 20px;\n  background-color: green;\n  color: white;\n  font-weight: bold;\n  border: 1px solid white;\n  transform: rotate(-90deg);\n  position: absolute;\n  left: -20px;\n  top: 13px;\n  text-align: center;\n  line-height: 20px; /* Dikey ortalamak için line-height kullanabilirsiniz */\n}\n\n.horses {\n  position: relative;\n  left: 0;\n}\n\n.horse {\n  position: absolute;\n  height: 50px;\n  top: 0; /* Atların dikeyde hizalanması için top kullanabilirsiniz */\n}\n\n.horse img {\n  width: 50px;\n  height: auto;\n  margin-right: 5px;\n  object-fit: contain;\n}\n\nh5 {\n  text-align: center;\n  color: red;\n  padding-bottom: 50px;\n}\n\n.finish-line {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  width: 4px;\n  height: 510px;\n  background-color: red;\n}\n\n.finish-text {\n  position: absolute;\n  left: 360px;\n  top: 510px;\n  color: red;\n  font-weight: bold;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAa;gEAEpBC,mBAAA,CAIQ,gB,aAHNA,mBAAA,CAEK,a,aADHA,mBAAA,CAA+C;EAA3CC,OAAO,EAAC,GAAG;EAACF,KAAK,EAAC;GAAc,QAAM,E;;EAMtCE,OAAO,EAAC,GAAG;EAACF,KAAK,EAAC;;;EAEfA,KAAK,EAAC;AAAiB;gEAExBC,mBAAA,CAKQ,gB,aAJNA,mBAAA,CAGK,a,aAFHA,mBAAA,CAAiB,YAAb,UAAQ,G,aACZA,mBAAA,CAAa,YAAT,MAAI,E;;uBAjB1BE,mBAAA,CAiCM,OAjCNC,UAiCM,GAhCJH,mBAAA,CA+BQ,gBA9BNI,UAIQ,EACRJ,mBAAA,CAwBQ,gBAvBNK,mBAAA,wCAA2C,G,kBAC3CH,mBAAA,CAqBKI,SAAA,QA/BbC,WAAA,CAUoCC,QAAA,CAAAC,YAAY,EAVhD,CAUoBC,IAAI,EAAEC,KAAK;yBAAvBT,mBAAA,CAqBK;MArBsCU,GAAG,EAAED,KAAK;MAAEZ,KAAK,EAAC;QAC3DC,mBAAA,CAmBK,MAnBLa,UAmBK,GAlBHb,mBAAA,CAAqD,YAAAc,gBAAA,CAA9CH,KAAK,QAAO,WAAS,GAAAG,gBAAA,CAAGJ,IAAI,CAACK,QAAQ,IAAG,GAAC,iBAChDf,mBAAA,CAgBM,OAhBNgB,UAgBM,GAfJhB,mBAAA,CAcQ,gBAbNiB,UAKQ,EACRjB,mBAAA,CAMQ,gBALNK,mBAAA,+EAAkF,G,kBAClFH,mBAAA,CAGKI,SAAA,QA1BvBC,WAAA,CAuBoDG,IAAI,CAACQ,MAAM,CAACC,KAAK,QAAQC,IAAI,EAAEC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,SAAS,GAAGF,CAAC,CAACE,SAAS,GAvBrH,CAuB8BC,KAAK,EAAEC,UAAU;2BAA7BvB,mBAAA,CAGK;QAHkGU,GAAG,EAAEa;MAAU,IACpHzB,mBAAA,CAA6B,YAAAc,gBAAA,CAAtBW,UAAU,sBACjBzB,mBAAA,CAAqC,YAAAc,gBAAA,CAA9BN,QAAA,CAAAkB,YAAY,CAACF,KAAK,CAACG,EAAE,kB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}