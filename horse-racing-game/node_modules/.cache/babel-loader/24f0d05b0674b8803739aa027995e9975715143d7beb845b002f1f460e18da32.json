{"ast":null,"code":"export default {\n  name: 'HorseRace',\n  data() {\n    return {\n      horses: [],\n      lanes: Array.from({\n        length: 10\n      }, (_, i) => i + 1),\n      // 10 şeritli yarış pisti\n      raceFinished: false\n    };\n  },\n  methods: {\n    generateHorses() {\n      // Atları oluştur ve başlangıç pozisyonlarını ayarla\n      this.horses = this.lanes.map(lane => ({\n        id: lane,\n        position: 0,\n        speed: Math.random() * (2 - 1) + 1,\n        // Rastgele hız belirle (1-2 arası)\n        hueRotate: Math.random() * 360 // Rastgele renk tonu\n      }));\n    },\n    startRace() {\n      // Yarış başladığında atları hareket ettir\n      let finishLinePosition = 100; // Bitiş çizgisinin pozisyonu (%)\n      let raceInterval = setInterval(() => {\n        this.horses.forEach(horse => {\n          if (horse.position < finishLinePosition) {\n            horse.position += horse.speed; // Atın pozisyonunu güncelle\n          } else {\n            this.finishRace(); // Yarış bittiğinde bitiş fonksiyonunu çağır\n            clearInterval(raceInterval); // Interval'i durdur\n          }\n        });\n      }, 50); // Hareket süresi (ms)\n    },\n    finishRace() {\n      this.raceFinished = true;\n    },\n    horsesInLane(lane) {\n      return this.horses.filter(horse => horse.id === lane);\n    },\n    calculateAnimationDelay(index) {\n      return index * 0.5; // Animasyon gecikmesi hesapla\n    }\n  },\n  mounted() {\n    this.generateHorses(); // Atları oluştur\n    setTimeout(() => {\n      this.startRace(); // Yarışı başlat\n    }, 1000);\n  }\n};","map":{"version":3,"names":["name","data","horses","lanes","Array","from","length","_","i","raceFinished","methods","generateHorses","map","lane","id","position","speed","Math","random","hueRotate","startRace","finishLinePosition","raceInterval","setInterval","forEach","horse","finishRace","clearInterval","horsesInLane","filter","calculateAnimationDelay","index","mounted","setTimeout"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/components/HorseRace.vue"],"sourcesContent":["<template>\n  <div class=\"race-track-container\">\n    <div class=\"race-track\">\n      <div class=\"lane-top\"></div>\n      <div v-for=\"lane in lanes\" :key=\"lane\" class=\"lane\">\n        <div class=\"lane-number\">{{ lane }}</div>\n        <div v-for=\"(horse, horseIndex) in horsesInLane(lane)\" :key=\"horse.id\" class=\"horse\" :style=\"{ left: horse.position + '%', animationDelay: calculateAnimationDelay(horseIndex) + 's' }\">\n          <img :src=\"require(`@/assets/horse${horse.id}.png`)\" alt=\"Horse\" class=\"horse-img\" :style=\"{ filter: 'hue-rotate(' + horse.hueRotate + 'deg)' }\" />\n        </div>\n      </div>\n      <div class=\"finish-line\">FINISH</div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HorseRace',\n  data() {\n    return {\n      horses: [],\n      lanes: Array.from({ length: 10 }, (_, i) => i + 1), // 10 şeritli yarış pisti\n      raceFinished: false\n    };\n  },\n  methods: {\n    generateHorses() {\n      // Atları oluştur ve başlangıç pozisyonlarını ayarla\n      this.horses = this.lanes.map(lane => ({\n        id: lane,\n        position: 0,\n        speed: Math.random() * (2 - 1) + 1, // Rastgele hız belirle (1-2 arası)\n        hueRotate: Math.random() * 360 // Rastgele renk tonu\n      }));\n    },\n    startRace() {\n      // Yarış başladığında atları hareket ettir\n      let finishLinePosition = 100; // Bitiş çizgisinin pozisyonu (%)\n      let raceInterval = setInterval(() => {\n        this.horses.forEach(horse => {\n          if (horse.position < finishLinePosition) {\n            horse.position += horse.speed; // Atın pozisyonunu güncelle\n          } else {\n            this.finishRace(); // Yarış bittiğinde bitiş fonksiyonunu çağır\n            clearInterval(raceInterval); // Interval'i durdur\n          }\n        });\n      }, 50); // Hareket süresi (ms)\n    },\n    finishRace() {\n      this.raceFinished = true;\n    },\n    horsesInLane(lane) {\n      return this.horses.filter(horse => horse.id === lane);\n    },\n    calculateAnimationDelay(index) {\n      return index * 0.5; // Animasyon gecikmesi hesapla\n    }\n  },\n  mounted() {\n    this.generateHorses(); // Atları oluştur\n    setTimeout(() => {\n      this.startRace(); // Yarışı başlat\n    }, 1000);\n  }\n};\n</script>\n\n<style scoped>\n.race-track-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n\n.race-track {\n  position: relative;\n  width: 600px; /* Yarış pistinin genişliği */\n  height: 200px; /* Yarış pistinin yüksekliği */\n  margin-bottom: 20px;\n  border-left: 1px solid #000;\n  border-right: 3px solid red;\n}\n\n.lane-top {\n  width: 100%;\n  height: 1px;\n  border-top: 1px dashed #000;\n}\n\n.lane {\n  position: relative;\n  width: 100%;\n  height: 60px;\n  border-bottom: 1px dashed #000;\n  display: flex;\n  align-items: center;\n}\n\n.lane-number {\n  width: 60px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: green;\n  color: white;\n  font-weight: bold;\n  border: 1px solid white;\n  transform: rotate(-90deg);\n  position: absolute;\n  left: -50px;\n}\n\n.horse {\n  position: absolute;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  animation: run linear 5s infinite; /* Atın koşma animasyonu */\n}\n\n@keyframes run {\n  from { left: 0%; }\n  to { left: 100%; }\n}\n\n.horse-img {\n  width: 80px;\n}\n\n.finish-line {\n  position: absolute;\n  top: 0;\n  left: 100%;\n  width: 3px;\n  height: 100%;\n  background-color: red;\n}\n</style>\n"],"mappings":"AAgBA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAEC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAA,GAAI,CAAC,CAAC;MAAE;MACpDC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACf;MACA,IAAI,CAACT,MAAK,GAAI,IAAI,CAACC,KAAK,CAACS,GAAG,CAACC,IAAG,KAAM;QACpCC,EAAE,EAAED,IAAI;QACRE,QAAQ,EAAE,CAAC;QACXC,KAAK,EAAEC,IAAI,CAACC,MAAM,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC;QAAE;QACpCC,SAAS,EAAEF,IAAI,CAACC,MAAM,CAAC,IAAI,GAAE,CAAE;MACjC,CAAC,CAAC,CAAC;IACL,CAAC;IACDE,SAASA,CAAA,EAAG;MACV;MACA,IAAIC,kBAAiB,GAAI,GAAG,EAAE;MAC9B,IAAIC,YAAW,GAAIC,WAAW,CAAC,MAAM;QACnC,IAAI,CAACrB,MAAM,CAACsB,OAAO,CAACC,KAAI,IAAK;UAC3B,IAAIA,KAAK,CAACV,QAAO,GAAIM,kBAAkB,EAAE;YACvCI,KAAK,CAACV,QAAO,IAAKU,KAAK,CAACT,KAAK,EAAE;UACjC,OAAO;YACL,IAAI,CAACU,UAAU,CAAC,CAAC,EAAE;YACnBC,aAAa,CAACL,YAAY,CAAC,EAAE;UAC/B;QACF,CAAC,CAAC;MACJ,CAAC,EAAE,EAAE,CAAC,EAAE;IACV,CAAC;IACDI,UAAUA,CAAA,EAAG;MACX,IAAI,CAACjB,YAAW,GAAI,IAAI;IAC1B,CAAC;IACDmB,YAAYA,CAACf,IAAI,EAAE;MACjB,OAAO,IAAI,CAACX,MAAM,CAAC2B,MAAM,CAACJ,KAAI,IAAKA,KAAK,CAACX,EAAC,KAAMD,IAAI,CAAC;IACvD,CAAC;IACDiB,uBAAuBA,CAACC,KAAK,EAAE;MAC7B,OAAOA,KAAI,GAAI,GAAG,EAAE;IACtB;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACrB,cAAc,CAAC,CAAC,EAAE;IACvBsB,UAAU,CAAC,MAAM;MACf,IAAI,CAACb,SAAS,CAAC,CAAC,EAAE;IACpB,CAAC,EAAE,IAAI,CAAC;EACV;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}