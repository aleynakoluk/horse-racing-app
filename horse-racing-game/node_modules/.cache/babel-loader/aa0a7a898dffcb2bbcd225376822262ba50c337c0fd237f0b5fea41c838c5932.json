{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport { createStore } from 'vuex';\nconst LOCAL_STORAGE_KEY = 'horse-racing-game';\nexport default createStore({\n  state: {\n    horses: [],\n    raceSchedule: [],\n    raceResults: [],\n    showSchedule: false,\n    showResults: false\n  },\n  mutations: {\n    setHorses(state, horses) {\n      state.horses = horses;\n    },\n    setRaceSchedule(state, schedule) {\n      state.raceSchedule = schedule;\n    },\n    updateHorsePosition(state, {\n      horseId,\n      position\n    }) {\n      const horse = state.horses.find(h => h.id === horseId);\n      if (horse) {\n        horse.position = position;\n      }\n    },\n    resetHorsePositions(state) {\n      state.horses.forEach(horse => {\n        horse.position = 0;\n      });\n    },\n    clearRaceResults(state) {\n      state.raceResults = [];\n    },\n    setShowSchedule(state, value) {\n      state.showSchedule = value;\n    },\n    setShowResults(state, value) {\n      state.showResults = value;\n    }\n  },\n  actions: {\n    async generateHorses({\n      commit\n    }) {\n      let storedHorses = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n      if (!storedHorses) {\n        storedHorses = generateHorses();\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(storedHorses));\n      }\n      commit('setHorses', storedHorses);\n      const schedule = generateRaceSchedule(storedHorses);\n      commit('setRaceSchedule', schedule);\n      commit('setShowSchedule', true);\n      commit('setShowResults', false);\n    },\n    async startRace({\n      commit,\n      state\n    }) {\n      commit('clearRaceResults');\n      commit('resetHorsePositions'); // Atların pozisyonlarını sıfırla\n      const schedule = generateRaceSchedule(state.horses);\n      commit('setRaceSchedule', schedule);\n      commit('setShowSchedule', false);\n      commit('setShowResults', true);\n      await new Promise(resolve => {\n        schedule.forEach((race, index) => {\n          setTimeout(() => {\n            race.horses.forEach(horse => {\n              const newPosition = horse.position + Math.random() * 10;\n              commit('updateHorsePosition', {\n                horseId: horse.id,\n                position: newPosition\n              });\n            });\n            if (index === schedule.length - 1) {\n              resolve(); // Tüm yarışlar tamamlandığında promise çözülür\n            }\n          }, index * 5000);\n        });\n      });\n      setTimeout(() => {\n        commit('resetHorsePositions'); // Atların yeniden başa dönmesi için pozisyonları sıfırla\n      }, schedule.length * 5000); // Yarışların tamamının bitmesini bekleyip atları sıfırla\n    }\n  }\n});\nfunction generateHorses() {\n  const horses = [];\n  for (let i = 1; i <= 20; i++) {\n    horses.push({\n      id: i,\n      color: getRandomColor(),\n      condition: Math.floor(Math.random() * 100) + 1,\n      position: 0,\n      image: require(`@/assets/horse${i}.png`)\n    });\n  }\n  return horses;\n}\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\nfunction generateRaceSchedule(horses) {\n  const distances = [1200, 1400, 1600, 1800, 2000, 2200];\n  const schedule = distances.map(distance => {\n    const selectedHorses = [];\n    const horseIds = new Set();\n    for (let i = 1; i <= 10; i++) {\n      let horse;\n      do {\n        horse = horses[Math.floor(Math.random() * horses.length)];\n      } while (horseIds.has(horse.id));\n      selectedHorses.push(horse);\n      horseIds.add(horse.id);\n    }\n    return {\n      distance,\n      horses: selectedHorses\n    };\n  });\n  return schedule;\n}","map":{"version":3,"names":["createStore","LOCAL_STORAGE_KEY","state","horses","raceSchedule","raceResults","showSchedule","showResults","mutations","setHorses","setRaceSchedule","schedule","updateHorsePosition","horseId","position","horse","find","h","id","resetHorsePositions","forEach","clearRaceResults","setShowSchedule","value","setShowResults","actions","generateHorses","commit","storedHorses","JSON","parse","localStorage","getItem","setItem","stringify","generateRaceSchedule","startRace","Promise","resolve","race","index","setTimeout","newPosition","Math","random","length","i","push","color","getRandomColor","condition","floor","image","require","letters","distances","map","distance","selectedHorses","horseIds","Set","has","add"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\n\nconst LOCAL_STORAGE_KEY = 'horse-racing-game';\n\nexport default createStore({\n  state: {\n    horses: [],\n    raceSchedule: [],\n    raceResults: [],\n    showSchedule: false,\n    showResults: false,\n  },\n  mutations: {\n    setHorses(state, horses) {\n      state.horses = horses;\n    },\n    setRaceSchedule(state, schedule) {\n      state.raceSchedule = schedule;\n    },\n    updateHorsePosition(state, { horseId, position }) {\n      const horse = state.horses.find(h => h.id === horseId);\n      if (horse) {\n        horse.position = position;\n      }\n    },\n    resetHorsePositions(state) {\n      state.horses.forEach(horse => {\n        horse.position = 0;\n      });\n    },\n    clearRaceResults(state) {\n      state.raceResults = [];\n    },\n    setShowSchedule(state, value) {\n      state.showSchedule = value;\n    },\n    setShowResults(state, value) {\n      state.showResults = value;\n    },\n  },\n  actions: {\n    async generateHorses({ commit }) {\n      let storedHorses = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n      if (!storedHorses) {\n        storedHorses = generateHorses();\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(storedHorses));\n      }\n      commit('setHorses', storedHorses);\n      const schedule = generateRaceSchedule(storedHorses);\n      commit('setRaceSchedule', schedule);\n      commit('setShowSchedule', true);\n      commit('setShowResults', false);\n    },\n\n    async startRace({ commit, state }) {\n      commit('clearRaceResults');\n      commit('resetHorsePositions'); // Atların pozisyonlarını sıfırla\n      const schedule = generateRaceSchedule(state.horses);\n      commit('setRaceSchedule', schedule);\n      commit('setShowSchedule', false);\n      commit('setShowResults', true);\n\n      await new Promise(resolve => {\n        schedule.forEach((race, index) => {\n          setTimeout(() => {\n            race.horses.forEach(horse => {\n              const newPosition = horse.position + Math.random() * 10;\n              commit('updateHorsePosition', { horseId: horse.id, position: newPosition });\n            });\n\n            if (index === schedule.length - 1) {\n              resolve(); // Tüm yarışlar tamamlandığında promise çözülür\n            }\n          }, index * 5000);\n        });\n      });\n\n      setTimeout(() => {\n        commit('resetHorsePositions'); // Atların yeniden başa dönmesi için pozisyonları sıfırla\n      }, schedule.length * 5000); // Yarışların tamamının bitmesini bekleyip atları sıfırla\n    },\n  }\n});\n\nfunction generateHorses() {\n  const horses = [];\n  for (let i = 1; i <= 20; i++) {\n    horses.push({\n      id: i,\n      color: getRandomColor(),\n      condition: Math.floor(Math.random() * 100) + 1,\n      position: 0,\n      image: require(`@/assets/horse${i}.png`),\n    });\n  }\n  return horses;\n}\n\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nfunction generateRaceSchedule(horses) {\n  const distances = [1200, 1400, 1600, 1800, 2000, 2200];\n  const schedule = distances.map(distance => {\n    const selectedHorses = [];\n    const horseIds = new Set();\n\n    for (let i = 1; i <= 10; i++) {\n      let horse;\n      do {\n        horse = horses[Math.floor(Math.random() * horses.length)];\n      } while (horseIds.has(horse.id));\n      selectedHorses.push(horse);\n      horseIds.add(horse.id);\n    }\n\n    return {\n      distance,\n      horses: selectedHorses,\n    };\n  });\n  return schedule;\n}\n"],"mappings":";;;;;;;;AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,MAAMC,iBAAiB,GAAG,mBAAmB;AAE7C,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,KAAK;IACnBC,WAAW,EAAE;EACf,CAAC;EACDC,SAAS,EAAE;IACTC,SAASA,CAACP,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACC,MAAM,GAAGA,MAAM;IACvB,CAAC;IACDO,eAAeA,CAACR,KAAK,EAAES,QAAQ,EAAE;MAC/BT,KAAK,CAACE,YAAY,GAAGO,QAAQ;IAC/B,CAAC;IACDC,mBAAmBA,CAACV,KAAK,EAAE;MAAEW,OAAO;MAAEC;IAAS,CAAC,EAAE;MAChD,MAAMC,KAAK,GAAGb,KAAK,CAACC,MAAM,CAACa,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKL,OAAO,CAAC;MACtD,IAAIE,KAAK,EAAE;QACTA,KAAK,CAACD,QAAQ,GAAGA,QAAQ;MAC3B;IACF,CAAC;IACDK,mBAAmBA,CAACjB,KAAK,EAAE;MACzBA,KAAK,CAACC,MAAM,CAACiB,OAAO,CAACL,KAAK,IAAI;QAC5BA,KAAK,CAACD,QAAQ,GAAG,CAAC;MACpB,CAAC,CAAC;IACJ,CAAC;IACDO,gBAAgBA,CAACnB,KAAK,EAAE;MACtBA,KAAK,CAACG,WAAW,GAAG,EAAE;IACxB,CAAC;IACDiB,eAAeA,CAACpB,KAAK,EAAEqB,KAAK,EAAE;MAC5BrB,KAAK,CAACI,YAAY,GAAGiB,KAAK;IAC5B,CAAC;IACDC,cAAcA,CAACtB,KAAK,EAAEqB,KAAK,EAAE;MAC3BrB,KAAK,CAACK,WAAW,GAAGgB,KAAK;IAC3B;EACF,CAAC;EACDE,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAC;MAAEC;IAAO,CAAC,EAAE;MAC/B,IAAIC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC/B,iBAAiB,CAAC,CAAC;MACtE,IAAI,CAAC2B,YAAY,EAAE;QACjBA,YAAY,GAAGF,cAAc,CAAC,CAAC;QAC/BK,YAAY,CAACE,OAAO,CAAChC,iBAAiB,EAAE4B,IAAI,CAACK,SAAS,CAACN,YAAY,CAAC,CAAC;MACvE;MACAD,MAAM,CAAC,WAAW,EAAEC,YAAY,CAAC;MACjC,MAAMjB,QAAQ,GAAGwB,oBAAoB,CAACP,YAAY,CAAC;MACnDD,MAAM,CAAC,iBAAiB,EAAEhB,QAAQ,CAAC;MACnCgB,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC;MAC/BA,MAAM,CAAC,gBAAgB,EAAE,KAAK,CAAC;IACjC,CAAC;IAED,MAAMS,SAASA,CAAC;MAAET,MAAM;MAAEzB;IAAM,CAAC,EAAE;MACjCyB,MAAM,CAAC,kBAAkB,CAAC;MAC1BA,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC;MAC/B,MAAMhB,QAAQ,GAAGwB,oBAAoB,CAACjC,KAAK,CAACC,MAAM,CAAC;MACnDwB,MAAM,CAAC,iBAAiB,EAAEhB,QAAQ,CAAC;MACnCgB,MAAM,CAAC,iBAAiB,EAAE,KAAK,CAAC;MAChCA,MAAM,CAAC,gBAAgB,EAAE,IAAI,CAAC;MAE9B,MAAM,IAAIU,OAAO,CAACC,OAAO,IAAI;QAC3B3B,QAAQ,CAACS,OAAO,CAAC,CAACmB,IAAI,EAAEC,KAAK,KAAK;UAChCC,UAAU,CAAC,MAAM;YACfF,IAAI,CAACpC,MAAM,CAACiB,OAAO,CAACL,KAAK,IAAI;cAC3B,MAAM2B,WAAW,GAAG3B,KAAK,CAACD,QAAQ,GAAG6B,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE;cACvDjB,MAAM,CAAC,qBAAqB,EAAE;gBAAEd,OAAO,EAAEE,KAAK,CAACG,EAAE;gBAAEJ,QAAQ,EAAE4B;cAAY,CAAC,CAAC;YAC7E,CAAC,CAAC;YAEF,IAAIF,KAAK,KAAK7B,QAAQ,CAACkC,MAAM,GAAG,CAAC,EAAE;cACjCP,OAAO,CAAC,CAAC,CAAC,CAAC;YACb;UACF,CAAC,EAAEE,KAAK,GAAG,IAAI,CAAC;QAClB,CAAC,CAAC;MACJ,CAAC,CAAC;MAEFC,UAAU,CAAC,MAAM;QACfd,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC;MACjC,CAAC,EAAEhB,QAAQ,CAACkC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,SAASnB,cAAcA,CAAA,EAAG;EACxB,MAAMvB,MAAM,GAAG,EAAE;EACjB,KAAK,IAAI2C,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC5B3C,MAAM,CAAC4C,IAAI,CAAC;MACV7B,EAAE,EAAE4B,CAAC;MACLE,KAAK,EAAEC,cAAc,CAAC,CAAC;MACvBC,SAAS,EAAEP,IAAI,CAACQ,KAAK,CAACR,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC;MAC9C9B,QAAQ,EAAE,CAAC;MACXsC,KAAK,EAAEC,OAAO,CAAC,iBAAiBP,CAAC,MAAM;IACzC,CAAC,CAAC;EACJ;EACA,OAAO3C,MAAM;AACf;AAEA,SAAS8C,cAAcA,CAAA,EAAG;EACxB,MAAMK,OAAO,GAAG,kBAAkB;EAClC,IAAIN,KAAK,GAAG,GAAG;EACf,KAAK,IAAIF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1BE,KAAK,IAAIM,OAAO,CAACX,IAAI,CAACQ,KAAK,CAACR,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;EAClD;EACA,OAAOI,KAAK;AACd;AAEA,SAASb,oBAAoBA,CAAChC,MAAM,EAAE;EACpC,MAAMoD,SAAS,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;EACtD,MAAM5C,QAAQ,GAAG4C,SAAS,CAACC,GAAG,CAACC,QAAQ,IAAI;IACzC,MAAMC,cAAc,GAAG,EAAE;IACzB,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAAC,CAAC;IAE1B,KAAK,IAAId,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC5B,IAAI/B,KAAK;MACT,GAAG;QACDA,KAAK,GAAGZ,MAAM,CAACwC,IAAI,CAACQ,KAAK,CAACR,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGzC,MAAM,CAAC0C,MAAM,CAAC,CAAC;MAC3D,CAAC,QAAQc,QAAQ,CAACE,GAAG,CAAC9C,KAAK,CAACG,EAAE,CAAC;MAC/BwC,cAAc,CAACX,IAAI,CAAChC,KAAK,CAAC;MAC1B4C,QAAQ,CAACG,GAAG,CAAC/C,KAAK,CAACG,EAAE,CAAC;IACxB;IAEA,OAAO;MACLuC,QAAQ;MACRtD,MAAM,EAAEuD;IACV,CAAC;EACH,CAAC,CAAC;EACF,OAAO/C,QAAQ;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}