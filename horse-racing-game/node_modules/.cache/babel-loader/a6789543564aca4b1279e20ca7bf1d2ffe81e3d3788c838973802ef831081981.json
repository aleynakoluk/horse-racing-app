{"ast":null,"code":"import { mapActions } from 'vuex';\nexport default {\n  methods: {\n    ...mapActions(['generateHorses', 'startRace']),\n    generateProgram() {\n      this.generateHorses(); // Atları oluşturmak için Vuex action'ı çağır\n    },\n    toggleRace() {\n      if (this.raceInProgress) {\n        // Yarış devam ediyorsa durdur\n        clearInterval(this.intervalId);\n      } else {\n        // Yarış başlat\n        this.startRace();\n        this.intervalId = setInterval(this.updatePositions, 1000); // 1 saniyede bir pozisyon güncelle\n      }\n      this.raceInProgress = !this.raceInProgress; // Yarış durumu tersine çevir\n    },\n    updatePositions() {\n      // Her atın pozisyonunu güncelleme işlemi\n      this.raceSchedule.forEach((race, index) => {\n        race.horses.forEach(horse => {\n          const newPosition = horse.position + Math.random() * 10;\n          this.updateHorsePosition({\n            horseId: horse.id,\n            position: newPosition\n          });\n        });\n      });\n    }\n  },\n  data() {\n    return {\n      raceInProgress: false,\n      intervalId: null\n    };\n  },\n  computed: {\n    ...mapState(['raceSchedule'])\n  }\n};","map":{"version":3,"names":["mapActions","methods","generateProgram","generateHorses","toggleRace","raceInProgress","clearInterval","intervalId","startRace","setInterval","updatePositions","raceSchedule","forEach","race","index","horses","horse","newPosition","position","Math","random","updateHorsePosition","horseId","id","data","computed","mapState"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/components/ControlButtons.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"control-buttons\">\n      <button @click=\"generateProgram\" class=\"btn\">GENERATE PROGRAM</button>\n      <button @click=\"toggleRace\" class=\"btn\">{{ raceInProgress ? 'PAUSE' : 'START' }}</button>\n    </div>\n    <!-- Diğer Vue bileşenleri ve içerikleri -->\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex';\n\nexport default {\n  methods: {\n    ...mapActions(['generateHorses', 'startRace']),\n    generateProgram() {\n      this.generateHorses(); // Atları oluşturmak için Vuex action'ı çağır\n    },\n    toggleRace() {\n      if (this.raceInProgress) {\n        // Yarış devam ediyorsa durdur\n        clearInterval(this.intervalId);\n      } else {\n        // Yarış başlat\n        this.startRace();\n        this.intervalId = setInterval(this.updatePositions, 1000); // 1 saniyede bir pozisyon güncelle\n      }\n      this.raceInProgress = !this.raceInProgress; // Yarış durumu tersine çevir\n    },\n    updatePositions() {\n      // Her atın pozisyonunu güncelleme işlemi\n      this.raceSchedule.forEach((race, index) => {\n        race.horses.forEach(horse => {\n          const newPosition = horse.position + Math.random() * 10;\n          this.updateHorsePosition({ horseId: horse.id, position: newPosition });\n        });\n      });\n    }\n  },\n  data() {\n    return {\n      raceInProgress: false,\n      intervalId: null\n    };\n  },\n  computed: {\n    ...mapState(['raceSchedule'])\n  }\n};\n</script>\n\n<style scoped>\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  background-color: #FF9E8F;\n  padding: 10px;\n  width: 100vw; /* Sayfanın tam genişliğini alacak şekilde ayarlandı */\n}\n\n.title {\n  font-size: 24px;\n  font-weight: bold;\n  color: #333;\n  width: 100%; /* Başlık genişliğini tam ekran genişliği olarak ayarladı */\n}\n\n.control-buttons {\n  display: flex;\n  align-items: center;\n  width: 100%; /* Kontrol düğmelerinin genişliğini tam ekran genişliği olarak ayarladı */\n  justify-content: flex-end; /* Sağa doğru hizalama */\n}\n\n.btn {\n  margin: 0 10px;\n  padding: 10px 20px;\n  color: black;\n  background-color:  #d8d8d8fe;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.3s ease;\n}\n\n.btn:hover {\n  background-color: #969393;\n}\n\n/* Tablet ve daha büyük cihazlar için */\n@media (min-width: 600px) {\n  .header {\n    height: 60px;\n  }\n\n  .title {\n    font-size: 28px;\n  }\n\n  .btn {\n    margin: 0 15px;\n    padding: 10px 25px;\n    font-size: 16px;\n  }\n}\n\n/* Mobil cihazlar için */\n@media (max-width: 599px) {\n  .header {\n    flex-direction: column;\n    align-items: flex-start;\n    height: auto;\n  }\n\n  .title {\n    font-size: 20px;\n    margin-bottom: 10px;\n  }\n\n  .control-buttons {\n    flex-direction: column;\n    align-items: stretch;\n    width: 100%;\n    justify-content: flex-start; /* Mobilde düğmelerin üst üste gelmesi için */\n    margin-right: 5px;\n  }\n\n  .btn {\n    margin: 5px 0;\n    width: 100%;\n    text-align: right; /* Mobilde düğmeleri sağa doğru hizala */\n  }\n}\n</style>\n"],"mappings":"AAWA,SAASA,UAAS,QAAS,MAAM;AAEjC,eAAe;EACbC,OAAO,EAAE;IACP,GAAGD,UAAU,CAAC,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;IAC9CE,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACC,cAAc,CAAC,CAAC,EAAE;IACzB,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAACC,cAAc,EAAE;QACvB;QACAC,aAAa,CAAC,IAAI,CAACC,UAAU,CAAC;MAChC,OAAO;QACL;QACA,IAAI,CAACC,SAAS,CAAC,CAAC;QAChB,IAAI,CAACD,UAAS,GAAIE,WAAW,CAAC,IAAI,CAACC,eAAe,EAAE,IAAI,CAAC,EAAE;MAC7D;MACA,IAAI,CAACL,cAAa,GAAI,CAAC,IAAI,CAACA,cAAc,EAAE;IAC9C,CAAC;IACDK,eAAeA,CAAA,EAAG;MAChB;MACA,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACzCD,IAAI,CAACE,MAAM,CAACH,OAAO,CAACI,KAAI,IAAK;UAC3B,MAAMC,WAAU,GAAID,KAAK,CAACE,QAAO,GAAIC,IAAI,CAACC,MAAM,CAAC,IAAI,EAAE;UACvD,IAAI,CAACC,mBAAmB,CAAC;YAAEC,OAAO,EAAEN,KAAK,CAACO,EAAE;YAAEL,QAAQ,EAAED;UAAY,CAAC,CAAC;QACxE,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC;EACDO,IAAIA,CAAA,EAAG;IACL,OAAO;MACLnB,cAAc,EAAE,KAAK;MACrBE,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDkB,QAAQ,EAAE;IACR,GAAGC,QAAQ,CAAC,CAAC,cAAc,CAAC;EAC9B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}