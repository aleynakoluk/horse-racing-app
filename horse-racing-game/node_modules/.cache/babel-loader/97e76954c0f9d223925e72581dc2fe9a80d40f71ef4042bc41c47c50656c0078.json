{"ast":null,"code":"import { mapState, mapActions } from 'vuex';\nexport default {\n  computed: {\n    ...mapState(['horses'])\n  },\n  methods: {\n    ...mapActions(['generateHorses', 'startRace', 'resetHorsePositions', 'updateHorsePosition']),\n    async handleGenerateScheduleClick() {\n      try {\n        await this.generateHorses();\n        console.log('Horses generated successfully!');\n      } catch (error) {\n        console.error('Error generating horses:', error);\n        alert('Error generating horses. Please try again later.');\n      }\n    },\n    async handleStartRaceClick() {\n      try {\n        await this.startRace();\n        this.startAnimation();\n        console.log('Race started successfully!');\n      } catch (error) {\n        console.error('Error starting race:', error);\n        alert('Error starting race. Please try again later.');\n      }\n    },\n    startAnimation() {\n      const updatePositions = () => {\n        this.horses.forEach(horse => {\n          const newPosition = horse.position + Math.random() * 10;\n          this.updateHorsePosition({\n            horseId: horse.id,\n            position: newPosition\n          });\n        });\n        const allHorsesFinished = this.horses.every(horse => horse.position >= 1000);\n        if (!allHorsesFinished) {\n          requestAnimationFrame(updatePositions);\n        }\n      };\n      requestAnimationFrame(updatePositions);\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapActions","computed","methods","handleGenerateScheduleClick","generateHorses","console","log","error","alert","handleStartRaceClick","startRace","startAnimation","updatePositions","horses","forEach","horse","newPosition","position","Math","random","updateHorsePosition","horseId","id","allHorsesFinished","every","requestAnimationFrame"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/components/ControlButtons.vue"],"sourcesContent":["<template>\n  <div class=\"header-container\">\n    <header class=\"header\">\n      <div class=\"left\">\n        <h1>Horse Racing</h1>\n      </div>\n      <div class=\"right\">\n        <button @click=\"handleGenerateScheduleClick\" class=\"btn\">GENERATE PROGRAM</button>\n        <button @click=\"handleStartRaceClick\" class=\"btn\">START/PAUSE</button>\n      </div>\n    </header>\n    <div v-for=\"horse in horses\" :key=\"horse.id\" class=\"track\">\n      <img :src=\"horse.image\" :style=\"{ transform: `translateX(${horse.position}px)` }\" class=\"horse\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex';\n\nexport default {\n  computed: {\n    ...mapState(['horses']),\n  },\n  methods: {\n    ...mapActions(['generateHorses', 'startRace', 'resetHorsePositions', 'updateHorsePosition']),\n    async handleGenerateScheduleClick() {\n      try {\n        await this.generateHorses();\n        console.log('Horses generated successfully!');\n      } catch (error) {\n        console.error('Error generating horses:', error);\n        alert('Error generating horses. Please try again later.');\n      }\n    },\n    async handleStartRaceClick() {\n      try {\n        await this.startRace();\n        this.startAnimation();\n        console.log('Race started successfully!');\n      } catch (error) {\n        console.error('Error starting race:', error);\n        alert('Error starting race. Please try again later.');\n      }\n    },\n    startAnimation() {\n      const updatePositions = () => {\n        this.horses.forEach(horse => {\n          const newPosition = horse.position + Math.random() * 10;\n          this.updateHorsePosition({ horseId: horse.id, position: newPosition });\n        });\n\n        const allHorsesFinished = this.horses.every(horse => horse.position >= 1000);\n\n        if (!allHorsesFinished) {\n          requestAnimationFrame(updatePositions);\n        }\n      };\n\n      requestAnimationFrame(updatePositions);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.header-container {\n  background-color: #f08080; /* Pembe arka plan */\n  width: 100%;\n}\n\n.header {\n  position: sticky; /* Yapışkan pozisyon */\n  top: 0; /* Ekranın en üstüne yapıştır */\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 93px; /* Header yüksekliği */\n  padding: 0 20px; /* Sol ve sağ padding */\n}\n\n.left h1 {\n  margin: 0;\n  color: #333;\n}\n\n.right {\n  display: flex;\n  gap: 10px;\n}\n\n.btn {\n  padding: 10px 50px;\n  cursor: pointer;\n  background-color: #d8d8d8fe;\n  color: black;\n  border: 1px solid #333;\n  border-radius: 4px;\n}\n\n.track {\n  position: relative;\n  width: 100%;\n  height: 50px;\n  margin-bottom: 10px;\n  background-color: #eee;\n}\n\n.horse {\n  position: absolute;\n  transition: transform 0.1s linear;\n}\n</style>\n"],"mappings":"AAkBA,SAASA,QAAQ,EAAEC,UAAS,QAAS,MAAM;AAE3C,eAAe;EACbC,QAAQ,EAAE;IACR,GAAGF,QAAQ,CAAC,CAAC,QAAQ,CAAC;EACxB,CAAC;EACDG,OAAO,EAAE;IACP,GAAGF,UAAU,CAAC,CAAC,gBAAgB,EAAE,WAAW,EAAE,qBAAqB,EAAE,qBAAqB,CAAC,CAAC;IAC5F,MAAMG,2BAA2BA,CAAA,EAAG;MAClC,IAAI;QACF,MAAM,IAAI,CAACC,cAAc,CAAC,CAAC;QAC3BC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC/C,EAAE,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDC,KAAK,CAAC,kDAAkD,CAAC;MAC3D;IACF,CAAC;IACD,MAAMC,oBAAoBA,CAAA,EAAG;MAC3B,IAAI;QACF,MAAM,IAAI,CAACC,SAAS,CAAC,CAAC;QACtB,IAAI,CAACC,cAAc,CAAC,CAAC;QACrBN,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MAC3C,EAAE,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CC,KAAK,CAAC,8CAA8C,CAAC;MACvD;IACF,CAAC;IACDG,cAAcA,CAAA,EAAG;MACf,MAAMC,eAAc,GAAIA,CAAA,KAAM;QAC5B,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,KAAI,IAAK;UAC3B,MAAMC,WAAU,GAAID,KAAK,CAACE,QAAO,GAAIC,IAAI,CAACC,MAAM,CAAC,IAAI,EAAE;UACvD,IAAI,CAACC,mBAAmB,CAAC;YAAEC,OAAO,EAAEN,KAAK,CAACO,EAAE;YAAEL,QAAQ,EAAED;UAAY,CAAC,CAAC;QACxE,CAAC,CAAC;QAEF,MAAMO,iBAAgB,GAAI,IAAI,CAACV,MAAM,CAACW,KAAK,CAACT,KAAI,IAAKA,KAAK,CAACE,QAAO,IAAK,IAAI,CAAC;QAE5E,IAAI,CAACM,iBAAiB,EAAE;UACtBE,qBAAqB,CAACb,eAAe,CAAC;QACxC;MACF,CAAC;MAEDa,qBAAqB,CAACb,eAAe,CAAC;IACxC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}