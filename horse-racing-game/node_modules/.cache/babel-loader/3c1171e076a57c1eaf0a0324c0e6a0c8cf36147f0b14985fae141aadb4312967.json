{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// store/index.js\nimport { createStore } from 'vuex';\nimport { generateHorses, generateRaceSchedule } from './utils';\nconst LOCAL_STORAGE_KEY = 'horses';\nexport default createStore({\n  state: {\n    horses: [],\n    raceSchedule: [],\n    raceResults: []\n  },\n  mutations: {\n    setHorses(state, horses) {\n      state.horses = horses;\n    },\n    setRaceSchedule(state, schedule) {\n      state.raceSchedule = schedule;\n    },\n    addRaceResult(state, result) {\n      state.raceResults.push(result);\n    },\n    clearRaceResults(state) {\n      state.raceResults = [];\n    }\n  },\n  actions: {\n    generateHorses({\n      commit\n    }) {\n      const storedHorses = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n      if (storedHorses) {\n        commit('setHorses', storedHorses);\n      } else {\n        const horses = generateHorses();\n        commit('setHorses', horses);\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(horses));\n      }\n    },\n    startRace({\n      commit,\n      state\n    }) {\n      commit('clearRaceResults');\n      const schedule = generateRaceSchedule(state.horses);\n      commit('setRaceSchedule', schedule);\n      schedule.forEach((race, index) => {\n        setTimeout(() => {\n          race.horses.forEach(horse => {\n            const newPosition = horse.position + Math.random() * 10;\n            horse.position = newPosition;\n          });\n          const winner = race.horses.reduce((prev, current) => prev.position > current.position ? prev : current);\n          const result = `Winner: Horse ${winner.id}`;\n          commit('addRaceResult', result);\n        }, index * 5000);\n      });\n    }\n  }\n});","map":{"version":3,"names":["createStore","generateHorses","generateRaceSchedule","LOCAL_STORAGE_KEY","state","horses","raceSchedule","raceResults","mutations","setHorses","setRaceSchedule","schedule","addRaceResult","result","push","clearRaceResults","actions","commit","storedHorses","JSON","parse","localStorage","getItem","setItem","stringify","startRace","forEach","race","index","setTimeout","horse","newPosition","position","Math","random","winner","reduce","prev","current","id"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/store/index.js"],"sourcesContent":["// store/index.js\nimport { createStore } from 'vuex';\nimport { generateHorses, generateRaceSchedule } from './utils';\n\nconst LOCAL_STORAGE_KEY = 'horses';\n\nexport default createStore({\n  state: {\n    horses: [],\n    raceSchedule: [],\n    raceResults: []\n  },\n  mutations: {\n    setHorses(state, horses) {\n      state.horses = horses;\n    },\n    setRaceSchedule(state, schedule) {\n      state.raceSchedule = schedule;\n    },\n    addRaceResult(state, result) {\n      state.raceResults.push(result);\n    },\n    clearRaceResults(state) {\n      state.raceResults = [];\n    }\n  },\n  actions: {\n    generateHorses({ commit }) {\n      const storedHorses = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n      if (storedHorses) {\n        commit('setHorses', storedHorses);\n      } else {\n        const horses = generateHorses();\n        commit('setHorses', horses);\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(horses));\n      }\n    },\n    startRace({ commit, state }) {\n      commit('clearRaceResults');\n      const schedule = generateRaceSchedule(state.horses);\n      commit('setRaceSchedule', schedule);\n\n      schedule.forEach((race, index) => {\n        setTimeout(() => {\n          race.horses.forEach(horse => {\n            const newPosition = horse.position + Math.random() * 10;\n            horse.position = newPosition;\n          });\n          const winner = race.horses.reduce((prev, current) => (prev.position > current.position) ? prev : current);\n          const result = `Winner: Horse ${winner.id}`;\n          commit('addRaceResult', result);\n        }, index * 5000);\n      });\n    }\n  }\n});\n"],"mappings":";AAAA;AACA,SAASA,WAAW,QAAQ,MAAM;AAClC,SAASC,cAAc,EAAEC,oBAAoB,QAAQ,SAAS;AAE9D,MAAMC,iBAAiB,GAAG,QAAQ;AAElC,eAAeH,WAAW,CAAC;EACzBI,KAAK,EAAE;IACLC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE;EACf,CAAC;EACDC,SAAS,EAAE;IACTC,SAASA,CAACL,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACC,MAAM,GAAGA,MAAM;IACvB,CAAC;IACDK,eAAeA,CAACN,KAAK,EAAEO,QAAQ,EAAE;MAC/BP,KAAK,CAACE,YAAY,GAAGK,QAAQ;IAC/B,CAAC;IACDC,aAAaA,CAACR,KAAK,EAAES,MAAM,EAAE;MAC3BT,KAAK,CAACG,WAAW,CAACO,IAAI,CAACD,MAAM,CAAC;IAChC,CAAC;IACDE,gBAAgBA,CAACX,KAAK,EAAE;MACtBA,KAAK,CAACG,WAAW,GAAG,EAAE;IACxB;EACF,CAAC;EACDS,OAAO,EAAE;IACPf,cAAcA,CAAC;MAAEgB;IAAO,CAAC,EAAE;MACzB,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACnB,iBAAiB,CAAC,CAAC;MACxE,IAAIe,YAAY,EAAE;QAChBD,MAAM,CAAC,WAAW,EAAEC,YAAY,CAAC;MACnC,CAAC,MAAM;QACL,MAAMb,MAAM,GAAGJ,cAAc,CAAC,CAAC;QAC/BgB,MAAM,CAAC,WAAW,EAAEZ,MAAM,CAAC;QAC3BgB,YAAY,CAACE,OAAO,CAACpB,iBAAiB,EAAEgB,IAAI,CAACK,SAAS,CAACnB,MAAM,CAAC,CAAC;MACjE;IACF,CAAC;IACDoB,SAASA,CAAC;MAAER,MAAM;MAAEb;IAAM,CAAC,EAAE;MAC3Ba,MAAM,CAAC,kBAAkB,CAAC;MAC1B,MAAMN,QAAQ,GAAGT,oBAAoB,CAACE,KAAK,CAACC,MAAM,CAAC;MACnDY,MAAM,CAAC,iBAAiB,EAAEN,QAAQ,CAAC;MAEnCA,QAAQ,CAACe,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAChCC,UAAU,CAAC,MAAM;UACfF,IAAI,CAACtB,MAAM,CAACqB,OAAO,CAACI,KAAK,IAAI;YAC3B,MAAMC,WAAW,GAAGD,KAAK,CAACE,QAAQ,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE;YACvDJ,KAAK,CAACE,QAAQ,GAAGD,WAAW;UAC9B,CAAC,CAAC;UACF,MAAMI,MAAM,GAAGR,IAAI,CAACtB,MAAM,CAAC+B,MAAM,CAAC,CAACC,IAAI,EAAEC,OAAO,KAAMD,IAAI,CAACL,QAAQ,GAAGM,OAAO,CAACN,QAAQ,GAAIK,IAAI,GAAGC,OAAO,CAAC;UACzG,MAAMzB,MAAM,GAAG,iBAAiBsB,MAAM,CAACI,EAAE,EAAE;UAC3CtB,MAAM,CAAC,eAAe,EAAEJ,MAAM,CAAC;QACjC,CAAC,EAAEe,KAAK,GAAG,IAAI,CAAC;MAClB,CAAC,CAAC;IACJ;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}