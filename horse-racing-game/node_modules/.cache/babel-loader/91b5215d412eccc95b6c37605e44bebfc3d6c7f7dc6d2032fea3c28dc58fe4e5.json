{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport { createStore } from 'vuex';\n\n// Function to generate horses with random attributes\nfunction generateHorses() {\n  const horses = [];\n  for (let i = 1; i <= 20; i++) {\n    const condition = Math.floor(Math.random() * 100) + 1;\n    horses.push({\n      id: i,\n      color: getRandomColor(),\n      condition: condition,\n      position: 0,\n      image: require(`@/assets/horse${i}.png`),\n      // Assuming `@/assets/horse${i}.png` is correct for your setup\n      speedFactor: 0.5 + condition / 200 // Adjusted speed factor based on condition\n    });\n  }\n  return horses;\n}\n\n// Function to generate a random color hex code\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\n// Function to generate race schedule with random distances and selected horses\nfunction generateRaceSchedule(horses) {\n  const distances = [1200, 1400, 1600, 1800, 2000, 2200];\n  const schedule = distances.map(distance => {\n    const selectedHorses = [];\n    const horseIds = new Set();\n    while (selectedHorses.length < 10) {\n      const horse = horses[Math.floor(Math.random() * horses.length)];\n      if (!horseIds.has(horse.id)) {\n        selectedHorses.push(horse);\n        horseIds.add(horse.id);\n      }\n    }\n    return {\n      distance,\n      horses: selectedHorses\n    };\n  });\n  return schedule;\n}\nexport default createStore({\n  state: {\n    horses: [],\n    raceSchedule: [],\n    raceResults: []\n  },\n  mutations: {\n    setHorses(state, horses) {\n      state.horses = horses;\n    },\n    setRaceSchedule(state, schedule) {\n      state.raceSchedule = schedule;\n    },\n    updateHorsePosition(state, {\n      horseId,\n      position\n    }) {\n      const horse = state.horses.find(h => h.id === horseId);\n      if (horse) {\n        horse.position = position;\n      }\n    },\n    addRaceResult(state, result) {\n      state.raceResults.push(result);\n    },\n    clearRaceResults(state) {\n      state.raceResults = [];\n    }\n  },\n  actions: {\n    generateHorses({\n      commit\n    }) {\n      const horses = generateHorses();\n      commit('setHorses', horses);\n    },\n    startRace({\n      commit,\n      state\n    }) {\n      commit('clearRaceResults');\n      const schedule = generateRaceSchedule(state.horses);\n      commit('setRaceSchedule', schedule);\n      schedule.forEach((race, index) => {\n        setTimeout(() => {\n          race.horses.forEach(horse => {\n            const newPosition = horse.position + Math.random() * 10 * horse.speedFactor;\n            commit('updateHorsePosition', {\n              horseId: horse.id,\n              position: newPosition\n            });\n          });\n          const winner = race.horses.reduce((prev, current) => prev.position > current.position ? prev : current);\n          const result = `Winner: Horse ${winner.id}`;\n          commit('addRaceResult', result);\n        }, index * 5000); // Start each race with a delay of 5 seconds\n      });\n    }\n  },\n  getters: {\n    calculateAnimationDelay: () => index => {\n      return index * 0.5; // Adjust as needed\n    }\n  }\n});","map":{"version":3,"names":["createStore","generateHorses","horses","i","condition","Math","floor","random","push","id","color","getRandomColor","position","image","require","speedFactor","letters","generateRaceSchedule","distances","schedule","map","distance","selectedHorses","horseIds","Set","length","horse","has","add","state","raceSchedule","raceResults","mutations","setHorses","setRaceSchedule","updateHorsePosition","horseId","find","h","addRaceResult","result","clearRaceResults","actions","commit","startRace","forEach","race","index","setTimeout","newPosition","winner","reduce","prev","current","getters","calculateAnimationDelay"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\n\n// Function to generate horses with random attributes\nfunction generateHorses() {\n  const horses = [];\n  for (let i = 1; i <= 20; i++) {\n    const condition = Math.floor(Math.random() * 100) + 1;\n    horses.push({\n      id: i,\n      color: getRandomColor(),\n      condition: condition,\n      position: 0,\n      image: require(`@/assets/horse${i}.png`), // Assuming `@/assets/horse${i}.png` is correct for your setup\n      speedFactor: 0.5 + (condition / 200), // Adjusted speed factor based on condition\n    });\n  }\n  return horses;\n}\n\n// Function to generate a random color hex code\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\n// Function to generate race schedule with random distances and selected horses\nfunction generateRaceSchedule(horses) {\n  const distances = [1200, 1400, 1600, 1800, 2000, 2200];\n  const schedule = distances.map(distance => {\n    const selectedHorses = [];\n    const horseIds = new Set();\n    while (selectedHorses.length < 10) {\n      const horse = horses[Math.floor(Math.random() * horses.length)];\n      if (!horseIds.has(horse.id)) {\n        selectedHorses.push(horse);\n        horseIds.add(horse.id);\n      }\n    }\n    return {\n      distance,\n      horses: selectedHorses,\n    };\n  });\n  return schedule;\n}\n\nexport default createStore({\n  state: {\n    horses: [],\n    raceSchedule: [],\n    raceResults: [],\n  },\n  mutations: {\n    setHorses(state, horses) {\n      state.horses = horses;\n    },\n    setRaceSchedule(state, schedule) {\n      state.raceSchedule = schedule;\n    },\n    updateHorsePosition(state, { horseId, position }) {\n      const horse = state.horses.find(h => h.id === horseId);\n      if (horse) {\n        horse.position = position;\n      }\n    },\n    addRaceResult(state, result) {\n      state.raceResults.push(result);\n    },\n    clearRaceResults(state) {\n      state.raceResults = [];\n    },\n  },\n  actions: {\n    generateHorses({ commit }) {\n      const horses = generateHorses();\n      commit('setHorses', horses);\n    },\n    startRace({ commit, state }) {\n      commit('clearRaceResults');\n      const schedule = generateRaceSchedule(state.horses);\n      commit('setRaceSchedule', schedule);\n    \n      schedule.forEach((race, index) => {\n        setTimeout(() => {\n          race.horses.forEach(horse => {\n            const newPosition = horse.position + Math.random() * 10 * horse.speedFactor;\n            commit('updateHorsePosition', { horseId: horse.id, position: newPosition });\n          });\n          const winner = race.horses.reduce((prev, current) => (prev.position > current.position) ? prev : current);\n          const result = `Winner: Horse ${winner.id}`;\n          commit('addRaceResult', result);\n        }, index * 5000); // Start each race with a delay of 5 seconds\n      });\n    },\n  },\n  getters: {\n    calculateAnimationDelay: () => index => {\n      return index * 0.5; // Adjust as needed\n    },\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}