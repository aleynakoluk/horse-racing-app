{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\n\n// Atları oluşturacak fonksiyon\nfunction generateHorses() {\n  const horses = [];\n  for (let i = 1; i <= 20; i++) {\n    horses.push({\n      id: i,\n      color: getRandomColor(),\n      condition: Math.floor(Math.random() * 100) + 1,\n      position: 0,\n      image: require(`@/assets/horse${i}.png`) // ` karakteri eklenmiş\n    });\n  }\n  return horses;\n}\n\n// Rastgele renk oluşturacak fonksiyon\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\n// Yarış programını oluşturacak fonksiyon\nfunction generateRaceSchedule(horses) {\n  const distances = [1200, 1400, 1600, 1800, 2000, 2200];\n  const schedule = distances.map(distance => {\n    const selectedHorses = horses.slice().sort((a, b) => b.condition - a.condition).slice(0, 10);\n    selectedHorses.forEach((horse, index) => {\n      horse.position = index * 10; // Atları durumlarına göre başlangıç pozisyonlarına yerleştir\n    });\n    return {\n      distance,\n      horses: selectedHorses\n    };\n  });\n  return schedule;\n}\nexport default createStore({\n  state: {\n    horses: [],\n    raceSchedule: [],\n    raceResults: []\n  },\n  mutations: {\n    setHorses(state, horses) {\n      state.horses = horses;\n    },\n    setRaceSchedule(state, schedule) {\n      state.raceSchedule = schedule;\n    },\n    updateHorsePosition(state, {\n      horseId,\n      position\n    }) {\n      const horse = state.horses.find(h => h.id === horseId);\n      if (horse) {\n        horse.position = position;\n      }\n    },\n    addRaceResult(state, result) {\n      state.raceResults.push(result);\n    },\n    clearRaceResults(state) {\n      state.raceResults = [];\n    }\n  },\n  actions: {\n    generateHorses({\n      commit\n    }) {\n      const horses = generateHorses();\n      commit('setHorses', horses);\n    },\n    startRace({\n      commit,\n      state\n    }) {\n      commit('clearRaceResults');\n      const schedule = generateRaceSchedule(state.horses);\n      commit('setRaceSchedule', schedule);\n      schedule.forEach((race, index) => {\n        setTimeout(() => {\n          race.horses.forEach(horse => {\n            const newPosition = horse.position + Math.random() * 10;\n            commit('updateHorsePosition', {\n              horseId: horse.id,\n              position: newPosition\n            });\n          });\n          const winner = race.horses.reduce((prev, current) => prev.position > current.position ? prev : current);\n          const result = `Winner: Horse ${winner.id}`;\n          commit('addRaceResult', result);\n        }, index * 5000); // Her yarışı 5 saniye arayla başlatır\n      });\n    }\n  }\n});","map":{"version":3,"names":["createStore","generateHorses","horses","i","push","id","color","getRandomColor","condition","Math","floor","random","position","image","require","letters","generateRaceSchedule","distances","schedule","map","distance","selectedHorses","slice","sort","a","b","forEach","horse","index","state","raceSchedule","raceResults","mutations","setHorses","setRaceSchedule","updateHorsePosition","horseId","find","h","addRaceResult","result","clearRaceResults","actions","commit","startRace","race","setTimeout","newPosition","winner","reduce","prev","current"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\n\n// Atları oluşturacak fonksiyon\nfunction generateHorses() {\n  const horses = [];\n  for (let i = 1; i <= 20; i++) {\n    horses.push({\n      id: i,\n      color: getRandomColor(),\n      condition: Math.floor(Math.random() * 100) + 1,\n      position: 0,\n      image: require(`@/assets/horse${i}.png`), // ` karakteri eklenmiş\n    });\n  }\n  return horses;\n}\n\n// Rastgele renk oluşturacak fonksiyon\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\n// Yarış programını oluşturacak fonksiyon\nfunction generateRaceSchedule(horses) {\n  const distances = [1200, 1400, 1600, 1800, 2000, 2200];\n  const schedule = distances.map(distance => {\n    const selectedHorses = horses.slice().sort((a, b) => b.condition - a.condition).slice(0, 10);\n    selectedHorses.forEach((horse, index) => {\n      horse.position = index * 10; // Atları durumlarına göre başlangıç pozisyonlarına yerleştir\n    });\n    return {\n      distance,\n      horses: selectedHorses,\n    };\n  });\n  return schedule;\n}\n\nexport default createStore({\n  state: {\n    horses: [],\n    raceSchedule: [],\n    raceResults: [],\n  },\n  mutations: {\n    setHorses(state, horses) {\n      state.horses = horses;\n    },\n    setRaceSchedule(state, schedule) {\n      state.raceSchedule = schedule;\n    },\n    updateHorsePosition(state, { horseId, position }) {\n      const horse = state.horses.find(h => h.id === horseId);\n      if (horse) {\n        horse.position = position;\n      }\n    },\n    addRaceResult(state, result) {\n      state.raceResults.push(result);\n    },\n    clearRaceResults(state) {\n      state.raceResults = [];\n    },\n  },\n  actions: {\n    generateHorses({ commit }) {\n      const horses = generateHorses();\n      commit('setHorses', horses);\n    },\n    startRace({ commit, state }) {\n      commit('clearRaceResults');\n      const schedule = generateRaceSchedule(state.horses);\n      commit('setRaceSchedule', schedule);\n\n      schedule.forEach((race, index) => {\n        setTimeout(() => {\n          race.horses.forEach(horse => {\n            const newPosition = horse.position + Math.random() * 10;\n            commit('updateHorsePosition', { horseId: horse.id, position: newPosition });\n          });\n          const winner = race.horses.reduce((prev, current) => (prev.position > current.position) ? prev : current);\n          const result = `Winner: Horse ${winner.id}`;\n          commit('addRaceResult', result);\n        }, index * 5000); // Her yarışı 5 saniye arayla başlatır\n      });\n    },\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}