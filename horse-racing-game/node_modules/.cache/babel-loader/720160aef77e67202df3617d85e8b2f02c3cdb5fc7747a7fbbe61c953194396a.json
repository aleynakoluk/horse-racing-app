{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1531af65\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"race-results\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Race Results\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.raceResults, result => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: result.id\n    }, _toDisplayString(result.name) + \" - \" + _toDisplayString(result.won ? 'Won' : 'Lost'), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","raceResults","result","key","id","name","_toDisplayString","won"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/components/RaceResults.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"race-results\">\n      <h2>Race Results</h2>\n      <ul>\n        <li v-for=\"result in raceResults\" :key=\"result.id\">\n          {{ result.name }} - {{ result.won ? 'Won' : 'Lost' }}\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'RaceResults',\n  data() {\n    return {\n      raceResults: []\n    };\n  },\n  mounted() {\n    // Simulate race results based on horse conditions\n    this.generateRaceResults();\n  },\n  methods: {\n    generateRaceResults() {\n      // Fetch horses from store or props\n      const horses = this.$store.state.horses;\n\n      // Randomly select 10 horses for the race\n      const selectedHorses = this.getRandomHorses(horses, 10);\n\n      // Simulate race results based on conditions (e.g., randomly determine if they won)\n      this.raceResults = selectedHorses.map(horse => ({\n        id: horse.id,\n        name: `Horse ${horse.id}`,\n        won: Math.random() < 0.5 // 50% chance of winning\n      }));\n    },\n    getRandomHorses(horses, count) {\n      const shuffled = horses.sort(() => 0.5 - Math.random());\n      return shuffled.slice(0, count);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.container {\n  text-align: center;\n  font-family: 'Arial, sans-serif';\n  background: #f0f0f0;\n  padding: 20px;\n  width: 300px;\n  height: 400px; /* Adjust height as needed */\n  overflow-y: auto; /* Always show scrollbar */\n  overflow-x: hidden; /* Hide horizontal scrollbar */\n}\n\n.container::-webkit-scrollbar {\n  width: 12px; /* Scroll bar width */\n}\n\n.container::-webkit-scrollbar-thumb {\n  background-color: #888; /* Scroll bar color */\n  border-radius: 6px;\n  opacity: 1; /* Always show scrollbar */\n}\n\n.container:hover::-webkit-scrollbar-thumb {\n  background-color: transparent; /* Hide scrollbar on hover */\n}\n\n.race-results {\n  margin-top: 20px;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAc;gEACvBC,mBAAA,CAAqB,YAAjB,cAAY;;uBAFpBC,mBAAA,CASM,OATNC,UASM,GARJF,mBAAA,CAOM,OAPNG,UAOM,GANJC,UAAqB,EACrBJ,mBAAA,CAIK,c,kBAHHC,mBAAA,CAEKI,SAAA,QAPbC,WAAA,CAK6BC,KAAA,CAAAC,WAAW,EAArBC,MAAM;yBAAjBR,mBAAA,CAEK;MAF8BS,GAAG,EAAED,MAAM,CAACE;wBAC1CF,MAAM,CAACG,IAAI,IAAG,KAAG,GAAAC,gBAAA,CAAGJ,MAAM,CAACK,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}