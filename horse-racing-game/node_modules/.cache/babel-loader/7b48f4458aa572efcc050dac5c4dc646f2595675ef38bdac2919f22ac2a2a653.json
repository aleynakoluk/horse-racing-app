{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-cd553564\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"race-track-container\"\n};\nconst _hoisted_2 = {\n  class: \"race-track\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"lane-top\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"lane-number\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"finish-line\"\n}, \"FINISH\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.lanes, lane => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: lane,\n      class: \"lane\"\n    }, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString(lane), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.horsesInLane(lane), (horse, horseIndex) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: horse.id,\n        class: \"horse\",\n        style: _normalizeStyle({\n          left: horse.position + '%',\n          animationDelay: $options.calculateAnimationDelay(horseIndex) + 's'\n        })\n      }, [_createElementVNode(\"img\", {\n        src: require(`@/assets/horse${horse.id}.png`),\n        alt: \"Horse\",\n        class: \"horse-img\",\n        style: _normalizeStyle({\n          filter: 'hue-rotate(' + horse.hueRotate + 'deg)'\n        })\n      }, null, 12 /* STYLE, PROPS */, _hoisted_5)], 4 /* STYLE */);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_6])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","lanes","lane","key","_hoisted_4","_toDisplayString","$options","horsesInLane","horse","horseIndex","id","style","_normalizeStyle","left","position","animationDelay","calculateAnimationDelay","src","require","alt","filter","hueRotate","_hoisted_5","_hoisted_6"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/components/HorseRace.vue"],"sourcesContent":["<template>\n  <div class=\"race-track-container\">\n    <div class=\"race-track\">\n      <div class=\"lane-top\"></div>\n      <div v-for=\"lane in lanes\" :key=\"lane\" class=\"lane\">\n        <div class=\"lane-number\">{{ lane }}</div>\n        <div v-for=\"(horse, horseIndex) in horsesInLane(lane)\" :key=\"horse.id\" class=\"horse\" :style=\"{ left: horse.position + '%', animationDelay: calculateAnimationDelay(horseIndex) + 's' }\">\n          <img :src=\"require(`@/assets/horse${horse.id}.png`)\" alt=\"Horse\" class=\"horse-img\" :style=\"{ filter: 'hue-rotate(' + horse.hueRotate + 'deg)' }\" />\n        </div>\n      </div>\n      <div class=\"finish-line\">FINISH</div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HorseRace',\n  data() {\n    return {\n      horses: [],\n      lanes: Array.from({ length: 10 }, (_, i) => i + 1), // 10 şeritli yarış pisti\n      raceFinished: false\n    };\n  },\n  methods: {\n    generateHorses() {\n      // Atları oluştur ve başlangıç pozisyonlarını ayarla\n      this.horses = this.lanes.map(lane => ({\n        id: lane,\n        position: 0,\n        speed: Math.random() * (2 - 1) + 1, // Rastgele hız belirle (1-2 arası)\n        hueRotate: Math.random() * 360 // Rastgele renk tonu\n      }));\n    },\n    startRace() {\n      // Yarış başladığında atları hareket ettir\n      let finishLinePosition = 100; // Bitiş çizgisinin pozisyonu (%)\n      let raceInterval = setInterval(() => {\n        this.horses.forEach(horse => {\n          if (horse.position < finishLinePosition) {\n            horse.position += horse.speed; // Atın pozisyonunu güncelle\n          } else {\n            this.finishRace(); // Yarış bittiğinde bitiş fonksiyonunu çağır\n            clearInterval(raceInterval); // Interval'i durdur\n          }\n        });\n      }, 50); // Hareket süresi (ms)\n    },\n    finishRace() {\n      this.raceFinished = true;\n    },\n    horsesInLane(lane) {\n      return this.horses.filter(horse => horse.id === lane);\n    },\n    calculateAnimationDelay(index) {\n      return index * 0.5; // Animasyon gecikmesi hesapla\n    }\n  },\n  mounted() {\n    this.generateHorses(); // Atları oluştur\n    setTimeout(() => {\n      this.startRace(); // Yarışı başlat\n    }, 1000);\n  }\n};\n</script>\n\n<style scoped>\n.race-track-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n\n.race-track {\n  position: relative;\n  width: 600px; /* Yarış pistinin genişliği */\n  height: 200px; /* Yarış pistinin yüksekliği */\n  margin-bottom: 20px;\n  border-left: 1px solid #000;\n  border-right: 3px solid red;\n}\n\n.lane-top {\n  width: 100%;\n  height: 1px;\n  border-top: 1px dashed #000;\n}\n\n.lane {\n  position: relative;\n  width: 100%;\n  height: 60px;\n  border-bottom: 1px dashed #000;\n  display: flex;\n  align-items: center;\n}\n\n.lane-number {\n  width: 60px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: green;\n  color: white;\n  font-weight: bold;\n  border: 1px solid white;\n  transform: rotate(-90deg);\n  position: absolute;\n  left: -50px;\n}\n\n.horse {\n  position: absolute;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  animation: run linear 5s infinite; /* Atın koşma animasyonu */\n}\n\n@keyframes run {\n  from { left: 0%; }\n  to { left: 100%; }\n}\n\n.horse-img {\n  width: 80px;\n}\n\n.finish-line {\n  position: absolute;\n  top: 0;\n  left: 100%;\n  width: 3px;\n  height: 100%;\n  background-color: red;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAsB;;EAC1BA,KAAK,EAAC;AAAY;gEACrBC,mBAAA,CAA4B;EAAvBD,KAAK,EAAC;AAAU;;EAEdA,KAAK,EAAC;AAAa;mBALhC;gEAUMC,mBAAA,CAAqC;EAAhCD,KAAK,EAAC;AAAa,GAAC,QAAM;;uBATnCE,mBAAA,CAWM,OAXNC,UAWM,GAVJF,mBAAA,CASM,OATNG,UASM,GARJC,UAA4B,G,kBAC5BH,mBAAA,CAKMI,SAAA,QATZC,WAAA,CAI0BC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAhBR,mBAAA,CAKM;MALsBS,GAAG,EAAED,IAAI;MAAEV,KAAK,EAAC;QAC3CC,mBAAA,CAAyC,OAAzCW,UAAyC,EAAAC,gBAAA,CAAbH,IAAI,mB,kBAChCR,mBAAA,CAEMI,SAAA,QARdC,WAAA,CAM2CO,QAAA,CAAAC,YAAY,CAACL,IAAI,GAN5D,CAMqBM,KAAK,EAAEC,UAAU;2BAA9Bf,mBAAA,CAEM;QAFkDS,GAAG,EAAEK,KAAK,CAACE,EAAE;QAAElB,KAAK,EAAC,OAAO;QAAEmB,KAAK,EANnGC,eAAA;UAAAC,IAAA,EAM6GL,KAAK,CAACM,QAAQ;UAAAC,cAAA,EAAwBT,QAAA,CAAAU,uBAAuB,CAACP,UAAU;QAAA;UAC3KhB,mBAAA,CAAmJ;QAA7IwB,GAAG,EAAEC,OAAO,kBAAkBV,KAAK,CAACE,EAAE;QAASS,GAAG,EAAC,OAAO;QAAC3B,KAAK,EAAC,WAAW;QAAEmB,KAAK,EAPnGC,eAAA;UAAAQ,MAAA,kBAO+HZ,KAAK,CAACa,SAAS;QAAA;sCAP9IC,UAAA,E;;kCAUMC,UAAqC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}