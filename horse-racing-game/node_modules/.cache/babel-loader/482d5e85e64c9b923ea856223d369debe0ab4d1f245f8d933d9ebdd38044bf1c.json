{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-cd553564\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"lane-title\"\n};\nconst _hoisted_2 = [\"src\", \"alt\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.lanes, (lane, laneIndex) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: `lane-${laneIndex}`,\n      class: \"lane\"\n    }, [_createElementVNode(\"div\", _hoisted_1, \"Lane \" + _toDisplayString(laneIndex + 1), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.horsesInLane(_ctx.race, lane), (horse, horseIndex) => {\n      return _openBlock(), _createElementBlock(_Fragment, {\n        key: `horse-${horse.id}`\n      }, [horseIndex !== 0 ? (_openBlock(), _createElementBlock(\"div\", {\n        class: \"dotted-line\",\n        key: `dotted-line-${horseIndex}`\n      })) : _createCommentVNode(\"v-if\", true), (_openBlock(), _createElementBlock(\"div\", {\n        key: horse.id,\n        class: \"horse\",\n        style: _normalizeStyle({\n          left: $options.calculateHorsePosition(horse.position) + '%',\n          animationDelay: $options.calculateAnimationDelay(horseIndex) + 's'\n        })\n      }, [_createElementVNode(\"img\", {\n        src: horse.image,\n        alt: 'Horse ' + horse.id,\n        class: \"horse-img\"\n      }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"span\", null, \"Horse \" + _toDisplayString(horse.id), 1 /* TEXT */)], 4 /* STYLE */))], 64 /* STABLE_FRAGMENT */);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_renderList","$options","lanes","lane","laneIndex","key","_createElementVNode","_hoisted_1","_toDisplayString","horsesInLane","_ctx","race","horse","horseIndex","id","_createCommentVNode","style","_normalizeStyle","left","calculateHorsePosition","position","animationDelay","calculateAnimationDelay","src","image","alt","_hoisted_2"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/components/HorseRace.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-for=\"(lane, laneIndex) in lanes\" :key=\"`lane-${laneIndex}`\" class=\"lane\">\n      <div class=\"lane-title\">Lane {{ laneIndex + 1 }}</div>\n      <template v-for=\"(horse, horseIndex) in horsesInLane(race, lane)\" :key=\"`horse-${horse.id}`\">\n        <div v-if=\"horseIndex !== 0\" class=\"dotted-line\" :key=\"`dotted-line-${horseIndex}`\"></div>\n        <div :key=\"horse.id\" class=\"horse\" :style=\"{ left: calculateHorsePosition(horse.position) + '%', animationDelay: calculateAnimationDelay(horseIndex) + 's' }\">\n          <img :src=\"horse.image\" :alt=\"'Horse ' + horse.id\" class=\"horse-img\">\n          <span>Horse {{ horse.id }}</span>\n        </div>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex';\n\nexport default {\n  name: 'HorseRace',\n  computed: {\n    ...mapState(['raceSchedule']),\n    lanes() {\n      return Array.from({ length: 10 }, (_, i) => i + 1); // 1'den 10'a kadar şerit numaraları\n    }\n  },\n  mounted() {\n    this.generateHorses();\n    this.startRace();\n  },\n  methods: {\n    ...mapActions(['generateHorses', 'startRace']),\n    horsesInLane(race, lane) {\n      return race.horses.slice((lane - 1) * 10, lane * 10); // Her şerit için atları getir\n    },\n    calculateAnimationDelay(horseIndex) {\n      return horseIndex * 0.5; // Her at için animasyon gecikmesi\n    },\n    calculateHorsePosition(position) {\n      return position * 90; // Atın şeritteki pozisyonunu yüzdelik olarak hesapla\n    }\n  }\n};\n</script>\n\n<style scoped>\n.race-results {\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  justify-content: flex-start;\n  align-items: center;\n  width: 450px; /* Container width set to 450px */\n  height: 600px; /* Container height set to 600px */\n  overflow-y: auto; /* Enable vertical scrolling */\n  padding: 10px;\n  border-radius: 4px;\n}\n\n.race-section {\n  flex: none; /* Do not allow flex resizing */\n  width: 100%; /* Use the full width of the container */\n  padding: 20px;\n  border-radius: 4px;\n}\n\n.race-track {\n  position: relative;\n  width: 100%;\n  height: 500px;\n  margin-top: 20px;\n}\n\n.lane {\n  position: relative;\n  width: 100%;\n  height: 70px; /* Each lane height */\n  margin-bottom: 10px; /* Lane bottom margin */\n}\n\n.lane-number {\n  width: 60px; /* Lane number width */\n  height: 60px; /* Lane number height */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: green;\n  color: white;\n  font-weight: bold;\n  border: 1px solid white;\n  transform: rotate(-90deg); /* Rotate 90 degrees */\n  position: absolute;\n  left: -50px; /* Left position */\n}\n\n.horses {\n  position: relative;\n  width: calc(100% - 70px); /* Horse container width */\n  height: 50px; /* Horse height */\n  display: flex;\n  align-items: center;\n}\n\n.horse {\n  position: absolute;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  color: white;\n  font-weight: bold;\n  animation: run linear 5s infinite; /* Run animation */\n}\n\n.horse-img {\n  width: 50px; /* Horse image width */\n  height: auto; /* Auto height */\n  margin-right: 5px; /* Right margin */\n}\n\n.dotted-line {\n  width: calc(100% - 70px); /* Dotted line width */\n  height: 2px; /* Dotted line height */\n  background-color: #000; /* Background color */\n  background-image: repeating-linear-gradient(to right, #000, #000 1px, transparent 1px, transparent 3px); /* Background image */\n  background-size: 4px 1px; /* Background size */\n  position: absolute;\n  bottom: 0; /* Bottom position */\n  margin-left: 70px; /* Left margin */\n}\n\nh5 {\n  text-align: center;\n  color: red;\n}\n\n@keyframes run {\n  from { left: 0%; }\n  to { left: 100%; }\n}\n</style>\n"],"mappings":";;;EAGWA,KAAK,EAAC;AAAY;mBAH7B;;uBACEC,mBAAA,CAWM,e,kBAVJA,mBAAA,CASMC,SAAA,QAXVC,WAAA,CAEqCC,QAAA,CAAAC,KAAK,EAF1C,CAEiBC,IAAI,EAAEC,SAAS;yBAA5BN,mBAAA,CASM;MATmCO,GAAG,UAAUD,SAAS;MAAIP,KAAK,EAAC;QACvES,mBAAA,CAAsD,OAAtDC,UAAsD,EAA9B,OAAK,GAAAC,gBAAA,CAAGJ,SAAS,uB,kBACzCN,mBAAA,CAMWC,SAAA,QAVjBC,WAAA,CAI8CC,QAAA,CAAAQ,YAAY,CAACC,IAAA,CAAAC,IAAI,EAAER,IAAI,GAJrE,CAIwBS,KAAK,EAAEC,UAAU;2BAJzCf,mBAAA,CAAAC,SAAA;QAAAM,GAAA,WAIuFO,KAAK,CAACE,EAAE;UAC5ED,UAAU,U,cAArBf,mBAAA,CAA0F;QAA7DD,KAAK,EAAC,aAAa;QAAEQ,GAAG,iBAAiBQ,UAAU;YALxFE,mBAAA,iB,cAMQjB,mBAAA,CAGM;QAHAO,GAAG,EAAEO,KAAK,CAACE,EAAE;QAAEjB,KAAK,EAAC,OAAO;QAAEmB,KAAK,EANjDC,eAAA;UAAAC,IAAA,EAM2DjB,QAAA,CAAAkB,sBAAsB,CAACP,KAAK,CAACQ,QAAQ;UAAAC,cAAA,EAAyBpB,QAAA,CAAAqB,uBAAuB,CAACT,UAAU;QAAA;UACjJP,mBAAA,CAAqE;QAA/DiB,GAAG,EAAEX,KAAK,CAACY,KAAK;QAAGC,GAAG,aAAab,KAAK,CAACE,EAAE;QAAEjB,KAAK,EAAC;8BAPnE6B,UAAA,GAQUpB,mBAAA,CAAiC,cAA3B,QAAM,GAAAE,gBAAA,CAAGI,KAAK,CAACE,EAAE,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}