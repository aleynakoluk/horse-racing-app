{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport { createStore } from 'vuex';\nconst LOCAL_STORAGE_KEY = 'horse-racing-game';\nexport default createStore({\n  state: {\n    horses: [],\n    raceSchedule: []\n  },\n  mutations: {\n    setHorses(state, horses) {\n      state.horses = horses;\n    },\n    setRaceSchedule(state, schedule) {\n      state.raceSchedule = schedule;\n    },\n    updateHorsePosition(state, {\n      horseId,\n      position\n    }) {\n      const horse = state.horses.find(h => h.id === horseId);\n      if (horse) {\n        horse.position = position;\n      }\n    },\n    resetHorsePositions(state) {\n      state.horses.forEach(horse => {\n        horse.position = 0;\n      });\n    }\n  },\n  actions: {\n    async generateHorses({\n      commit\n    }) {\n      let storedHorses = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n      if (!storedHorses) {\n        storedHorses = generateHorses();\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(storedHorses));\n      } else {\n        // Sort horses by condition in descending order\n        storedHorses.sort((a, b) => b.condition - a.condition);\n      }\n      commit('setHorses', storedHorses);\n      const schedule = generateRaceSchedule(storedHorses);\n      commit('setRaceSchedule', schedule);\n    },\n    async startRace({\n      commit,\n      state\n    }) {\n      // Removed async keyword here\n      commit('resetHorsePositions');\n      const schedule = generateRaceSchedule(state.horses);\n      commit('setRaceSchedule', schedule);\n      const tickInterval = 500; // 0.5 saniyede bir atlar hareket eder\n\n      schedule.forEach((race, index) => {\n        setTimeout(() => {\n          race.horses.forEach(horse => {\n            const distancePerTick = horse.speed / 10; // Condition'a bağlı olarak atın her tıklamada gideceği mesafe\n            const newPosition = horse.position + distancePerTick;\n            commit('updateHorsePosition', {\n              horseId: horse.id,\n              position: newPosition\n            });\n          });\n        }, index * tickInterval); // Her yarış arasında 0.5 saniye bekler\n      });\n      setTimeout(() => {\n        commit('resetHorsePositions');\n      }, schedule.length * tickInterval); // Yarışın tamamlanmasının ardından atların pozisyonlarını sıfırlar\n    }\n  }\n});\nfunction generateHorses() {\n  const horses = [];\n  const laneCount = 10; // Toplam şerit sayısı\n  const laneWidth = 500; // Atın koşacağı toplam yol uzunluğu (500px)\n\n  for (let i = 1; i <= 20; i++) {\n    const laneNumber = (i - 1) % laneCount + 1; // Atın hangi şeritte olacağını belirler\n    const condition = Math.floor(Math.random() * 100) + 1;\n    const speed = condition / 10; // Condition'a bağlı olarak atın hızını ayarlar\n\n    horses.push({\n      id: i,\n      color: getRandomColor(),\n      condition: condition,\n      position: 0,\n      // Başlangıç pozisyonu sıfır olarak ayarlandı\n      speed: speed,\n      maxDistance: laneWidth,\n      // Atın koşacağı toplam yol uzunluğu\n      image: require(`@/assets/horse${i}.png`)\n    });\n  }\n  return horses;\n}\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\nfunction generateRaceSchedule(horses) {\n  const distances = [1200, 1400, 1600, 1800, 2000, 2200];\n  const schedule = distances.map(distance => {\n    const selectedHorses = [];\n    const horseIds = new Set();\n    for (let i = 1; i <= 10; i++) {\n      let horse;\n      do {\n        horse = horses[Math.floor(Math.random() * horses.length)];\n      } while (horseIds.has(horse.id));\n      selectedHorses.push(horse);\n      horseIds.add(horse.id);\n    }\n    return {\n      distance,\n      horses: selectedHorses\n    };\n  });\n  return schedule;\n}","map":{"version":3,"names":["createStore","LOCAL_STORAGE_KEY","state","horses","raceSchedule","mutations","setHorses","setRaceSchedule","schedule","updateHorsePosition","horseId","position","horse","find","h","id","resetHorsePositions","forEach","actions","generateHorses","commit","storedHorses","JSON","parse","localStorage","getItem","setItem","stringify","sort","a","b","condition","generateRaceSchedule","startRace","tickInterval","race","index","setTimeout","distancePerTick","speed","newPosition","length","laneCount","laneWidth","i","laneNumber","Math","floor","random","push","color","getRandomColor","maxDistance","image","require","letters","distances","map","distance","selectedHorses","horseIds","Set","has","add"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\n\nconst LOCAL_STORAGE_KEY = 'horse-racing-game';\n\nexport default createStore({\n  state: {\n    horses: [],\n    raceSchedule: [],\n  },\n  mutations: {\n    setHorses(state, horses) {\n      state.horses = horses;\n    },\n    setRaceSchedule(state, schedule) {\n      state.raceSchedule = schedule;\n    },\n    updateHorsePosition(state, { horseId, position }) {\n      const horse = state.horses.find(h => h.id === horseId);\n      if (horse) {\n        horse.position = position;\n      }\n    },\n    resetHorsePositions(state) {\n      state.horses.forEach(horse => {\n        horse.position = 0;\n      });\n    },\n  },\n  actions: {\n    async generateHorses({ commit }) {\n      let storedHorses = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n      if (!storedHorses) {\n        storedHorses = generateHorses();\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(storedHorses));\n      } else {\n        // Sort horses by condition in descending order\n        storedHorses.sort((a, b) => b.condition - a.condition);\n      }\n      commit('setHorses', storedHorses);\n      const schedule = generateRaceSchedule(storedHorses);\n      commit('setRaceSchedule', schedule);\n    },\n    async startRace({ commit, state }) {\n      // Removed async keyword here\n      commit('resetHorsePositions');\n      const schedule = generateRaceSchedule(state.horses);\n      commit('setRaceSchedule', schedule);\n    \n      const tickInterval = 500; // 0.5 saniyede bir atlar hareket eder\n    \n      schedule.forEach((race, index) => {\n        setTimeout(() => {\n          race.horses.forEach(horse => {\n            const distancePerTick = horse.speed / 10; // Condition'a bağlı olarak atın her tıklamada gideceği mesafe\n            const newPosition = horse.position + distancePerTick;\n            commit('updateHorsePosition', { horseId: horse.id, position: newPosition });\n          });\n        }, index * tickInterval); // Her yarış arasında 0.5 saniye bekler\n      });\n    \n      setTimeout(() => {\n        commit('resetHorsePositions');\n      }, schedule.length * tickInterval); // Yarışın tamamlanmasının ardından atların pozisyonlarını sıfırlar\n    },\n  },\n});\n\nfunction generateHorses() {\n  const horses = [];\n  const laneCount = 10; // Toplam şerit sayısı\n  const laneWidth = 500; // Atın koşacağı toplam yol uzunluğu (500px)\n\n  for (let i = 1; i <= 20; i++) {\n    const laneNumber = (i - 1) % laneCount + 1; // Atın hangi şeritte olacağını belirler\n    const condition = Math.floor(Math.random() * 100) + 1;\n    const speed = condition / 10; // Condition'a bağlı olarak atın hızını ayarlar\n\n    horses.push({\n      id: i,\n      color: getRandomColor(),\n      condition: condition,\n      position: 0, // Başlangıç pozisyonu sıfır olarak ayarlandı\n      speed: speed,\n      maxDistance: laneWidth, // Atın koşacağı toplam yol uzunluğu\n      image: require(`@/assets/horse${i}.png`),\n    });\n  }\n  return horses;\n}\n\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nfunction generateRaceSchedule(horses) {\n  const distances = [1200, 1400, 1600, 1800, 2000, 2200];\n  const schedule = distances.map(distance => {\n    const selectedHorses = [];\n    const horseIds = new Set();\n\n    for (let i = 1; i <= 10; i++) {\n      let horse;\n      do {\n        horse = horses[Math.floor(Math.random() * horses.length)];\n      } while (horseIds.has(horse.id));\n      selectedHorses.push(horse);\n      horseIds.add(horse.id);\n    }\n\n    return {\n      distance,\n      horses: selectedHorses,\n    };\n  });\n  return schedule;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}