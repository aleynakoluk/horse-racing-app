{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-cd553564\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"race-track\"\n};\nconst _hoisted_2 = {\n  width: \"100%\",\n  height: \"300\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"rect\", {\n  x: \"0\",\n  y: \"140\",\n  width: \"100%\",\n  height: \"20\",\n  fill: \"#8fbbd9\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"rect\", {\n  x: \"0\",\n  y: \"180\",\n  width: \"100%\",\n  height: \"20\",\n  fill: \"#8fbbd9\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"rect\", {\n  x: \"0\",\n  y: \"220\",\n  width: \"100%\",\n  height: \"20\",\n  fill: \"#8fbbd9\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_6 = [\"cx\", \"fill\"];\nconst _hoisted_7 = {\n  key: 0,\n  class: \"winner-indicator\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(), _createElementBlock(\"svg\", _hoisted_2, [_createCommentVNode(\" Pist çizgileri \"), _hoisted_3, _hoisted_4, _hoisted_5, _createCommentVNode(\" Atlar \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.horses, horse => {\n    return _openBlock(), _createElementBlock(\"g\", {\n      key: horse.id\n    }, [_createElementVNode(\"circle\", {\n      cx: horse.position + '%',\n      cy: \"130\",\n      r: \"12\",\n      fill: horse.color,\n      class: \"horse\"\n    }, null, 8 /* PROPS */, _hoisted_6)]);\n  }), 128 /* KEYED_FRAGMENT */))])), $data.winner !== null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, \" Winner: Horse \" + _toDisplayString($data.winner), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","width","height","_createElementVNode","x","y","fill","key","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_hoisted_3","_hoisted_4","_hoisted_5","_Fragment","_renderList","$options","horses","horse","id","cx","position","cy","r","color","_hoisted_6","$data","winner","_hoisted_7","_toDisplayString"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/components/HorseRace.vue"],"sourcesContent":["<!-- <template>\n    <div class=\"race-track\">\n      <div v-for=\"horse in horses\" :key=\"horse.id\" class=\"horse\" :style=\"{ left: horse.position + '%' }\">\n        <i class=\"fas fa-horse\"></i>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'HorseRace',\n    computed: {\n      horses() {\n        return this.$store.state.horses.map(horse => ({\n          ...horse,\n          position: 0\n        }));\n      }\n    },\n    mounted() {\n      this.$store.dispatch('generateHorses');\n      this.animateHorses();\n    },\n    methods: {\n      animateHorses() {\n        const horses = this.horses;\n        const maxPosition = 100;\n        const animationDuration = 5000;\n  \n        horses.forEach((horse, index) => {\n          setTimeout(() => {\n            horse.position = maxPosition;\n          }, index * 100);\n        });\n  \n        setTimeout(() => {\n          horses.forEach(horse => {\n            horse.position = 0;\n          });\n          this.animateHorses();\n        }, animationDuration);\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .race-track {\n    background-image: url('@/assets/race-track.png');\n    background-size: cover;\n    height: 300px;\n    position: relative;\n    margin-bottom: 20px;\n  }\n  \n  .horse {\n    position: absolute;\n    bottom: 10px;\n  }\n  \n  .horse i {\n    font-size: 24px;\n    color: brown;\n  }\n  \n  @keyframes run {\n    from {\n      left: 0;\n    }\n    to {\n      left: 100%;\n    }\n  }\n  </style>\n   -->\n   <template>\n    <div class=\"race-track\">\n      <svg width=\"100%\" height=\"300\">\n        <!-- Pist çizgileri -->\n        <rect x=\"0\" y=\"140\" width=\"100%\" height=\"20\" fill=\"#8fbbd9\" />\n        <rect x=\"0\" y=\"180\" width=\"100%\" height=\"20\" fill=\"#8fbbd9\" />\n        <rect x=\"0\" y=\"220\" width=\"100%\" height=\"20\" fill=\"#8fbbd9\" />\n  \n        <!-- Atlar -->\n        <g v-for=\"horse in horses\" :key=\"horse.id\">\n          <circle :cx=\"horse.position + '%'\" cy=\"130\" r=\"12\" :fill=\"horse.color\" class=\"horse\" />\n        </g>\n      </svg>\n  \n      <div v-if=\"winner !== null\" class=\"winner-indicator\">\n        Winner: Horse {{ winner }}\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'HorseRace',\n    data() {\n      return {\n        winner: null,\n      };\n    },\n    computed: {\n      horses() {\n        return this.$store.state.horses.map(horse => ({\n          ...horse,\n          position: 0,\n        }));\n      },\n    },\n    mounted() {\n      this.$store.dispatch('generateHorses');\n      this.animateHorses();\n    },\n    methods: {\n      animateHorses() {\n        const horses = this.horses;\n        const maxPosition = 100;\n        const animationDuration = 5000;\n  \n        horses.forEach((horse, index) => {\n          setTimeout(() => {\n            horse.position = maxPosition;\n          }, index * 1000);\n        });\n  \n        setTimeout(() => {\n          const winningHorse = Math.floor(Math.random() * horses.length) + 1;\n          this.winner = winningHorse;\n          horses.forEach(horse => {\n            horse.position = 0;\n          });\n          setTimeout(() => {\n            this.winner = null;\n            this.animateHorses();\n          }, 3000);\n        }, animationDuration);\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .race-track {\n    position: relative;\n    margin-bottom: 20px;\n  }\n  \n  .horse {\n    animation: run 5s linear infinite;\n  }\n  \n  .winner-indicator {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: rgba(255, 255, 255, 0.7);\n    padding: 10px;\n    border-radius: 5px;\n    font-size: 18px;\n    font-weight: bold;\n    color: #333;\n  }\n  \n  @keyframes run {\n    from {\n      cx: 0%;\n    }\n    to {\n      cx: 100%;\n    }\n  }\n  </style>\n  "],"mappings":";;;EA4ESA,KAAK,EAAC;AAAY;;EAChBC,KAAK,EAAC,MAAM;EAACC,MAAM,EAAC;;gEAEvBC,mBAAA,CAA8D;EAAxDC,CAAC,EAAC,GAAG;EAACC,CAAC,EAAC,KAAK;EAACJ,KAAK,EAAC,MAAM;EAACC,MAAM,EAAC,IAAI;EAACI,IAAI,EAAC;;gEAClDH,mBAAA,CAA8D;EAAxDC,CAAC,EAAC,GAAG;EAACC,CAAC,EAAC,KAAK;EAACJ,KAAK,EAAC,MAAM;EAACC,MAAM,EAAC,IAAI;EAACI,IAAI,EAAC;;gEAClDH,mBAAA,CAA8D;EAAxDC,CAAC,EAAC,GAAG;EAACC,CAAC,EAAC,KAAK;EAACJ,KAAK,EAAC,MAAM;EAACC,MAAM,EAAC,IAAI;EAACI,IAAI,EAAC;;mBAjF1D;;EAAAC,GAAA;EAyFkCP,KAAK,EAAC;;;uBAbpCQ,mBAAA,CAgBM,OAhBNC,UAgBM,I,cAfJD,mBAAA,CAUM,OAVNE,UAUM,GATJC,mBAAA,oBAAuB,EACvBC,UAA8D,EAC9DC,UAA8D,EAC9DC,UAA8D,EAE9DH,mBAAA,WAAc,G,kBACdH,mBAAA,CAEIO,SAAA,QAtFZC,WAAA,CAoF2BC,QAAA,CAAAC,MAAM,EAAfC,KAAK;yBAAfX,mBAAA,CAEI;MAFwBD,GAAG,EAAEY,KAAK,CAACC;QACrCjB,mBAAA,CAAuF;MAA9EkB,EAAE,EAAEF,KAAK,CAACG,QAAQ;MAAQC,EAAE,EAAC,KAAK;MAACC,CAAC,EAAC,IAAI;MAAElB,IAAI,EAAEa,KAAK,CAACM,KAAK;MAAEzB,KAAK,EAAC;4BArFvF0B,UAAA,E;qCAyFiBC,KAAA,CAAAC,MAAM,a,cAAjBpB,mBAAA,CAEM,OAFNqB,UAEM,EAF+C,iBACrC,GAAAC,gBAAA,CAAGH,KAAA,CAAAC,MAAM,oBA1F/BjB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}