{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    raceSchedule: [],\n    currentRaceIndex: 0\n  },\n  mutations: {\n    SET_RACE_SCHEDULE(state, schedule) {\n      state.raceSchedule = schedule;\n    },\n    SET_CURRENT_RACE_INDEX(state, index) {\n      state.currentRaceIndex = index;\n    },\n    UPDATE_RACE_STATUS(state, {\n      index,\n      status\n    }) {\n      state.raceSchedule[index].status = status;\n    }\n  },\n  actions: {\n    generateHorses({\n      commit\n    }) {\n      const schedule = Array.from({\n        length: 6\n      }, (_, i) => ({\n        id: i + 1,\n        status: 'pending',\n        distance: 1000,\n        // example distance\n        horses: generateHorsesForRace() // function to generate horses for each race\n      }));\n      commit('SET_RACE_SCHEDULE', schedule);\n      commit('SET_CURRENT_RACE_INDEX', 0);\n    },\n    startRace({\n      state,\n      commit,\n      dispatch\n    }) {\n      if (state.currentRaceIndex < state.raceSchedule.length) {\n        commit('UPDATE_RACE_STATUS', {\n          index: state.currentRaceIndex,\n          status: 'running'\n        });\n\n        // Simulate race completion after a delay\n        setTimeout(() => {\n          commit('UPDATE_RACE_STATUS', {\n            index: state.currentRaceIndex,\n            status: 'complete'\n          });\n          const nextRaceIndex = state.currentRaceIndex + 1;\n          if (nextRaceIndex < state.raceSchedule.length) {\n            commit('SET_CURRENT_RACE_INDEX', nextRaceIndex);\n            dispatch('startRace');\n          }\n        }, 3000); // example delay for race completion\n      }\n    }\n  },\n  modules: {}\n});\nfunction generateHorsesForRace() {\n  // This function should generate and return an array of horses for each race\n  return [{\n    id: 1,\n    image: 'horse1.png',\n    color: 'red',\n    position: 0\n  }, {\n    id: 2,\n    image: 'horse2.png',\n    color: 'blue',\n    position: 0\n  }\n  // Add more horses as needed\n  ];\n}","map":{"version":3,"names":["Vue","Vuex","use","Store","state","raceSchedule","currentRaceIndex","mutations","SET_RACE_SCHEDULE","schedule","SET_CURRENT_RACE_INDEX","index","UPDATE_RACE_STATUS","status","actions","generateHorses","commit","Array","from","length","_","i","id","distance","horses","generateHorsesForRace","startRace","dispatch","setTimeout","nextRaceIndex","modules","image","color","position"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/store/index.js"],"sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    raceSchedule: [],\n    currentRaceIndex: 0\n  },\n  mutations: {\n    SET_RACE_SCHEDULE(state, schedule) {\n      state.raceSchedule = schedule;\n    },\n    SET_CURRENT_RACE_INDEX(state, index) {\n      state.currentRaceIndex = index;\n    },\n    UPDATE_RACE_STATUS(state, { index, status }) {\n      state.raceSchedule[index].status = status;\n    }\n  },\n  actions: {\n    generateHorses({ commit }) {\n      const schedule = Array.from({ length: 6 }, (_, i) => ({\n        id: i + 1,\n        status: 'pending',\n        distance: 1000, // example distance\n        horses: generateHorsesForRace() // function to generate horses for each race\n      }));\n      commit('SET_RACE_SCHEDULE', schedule);\n      commit('SET_CURRENT_RACE_INDEX', 0);\n    },\n    startRace({ state, commit, dispatch }) {\n      if (state.currentRaceIndex < state.raceSchedule.length) {\n        commit('UPDATE_RACE_STATUS', { index: state.currentRaceIndex, status: 'running' });\n\n        // Simulate race completion after a delay\n        setTimeout(() => {\n          commit('UPDATE_RACE_STATUS', { index: state.currentRaceIndex, status: 'complete' });\n          const nextRaceIndex = state.currentRaceIndex + 1;\n          if (nextRaceIndex < state.raceSchedule.length) {\n            commit('SET_CURRENT_RACE_INDEX', nextRaceIndex);\n            dispatch('startRace');\n          }\n        }, 3000); // example delay for race completion\n      }\n    }\n  },\n  modules: {\n  }\n});\n\nfunction generateHorsesForRace() {\n  // This function should generate and return an array of horses for each race\n  return [\n    { id: 1, image: 'horse1.png', color: 'red', position: 0 },\n    { id: 2, image: 'horse2.png', color: 'blue', position: 0 },\n    // Add more horses as needed\n  ];\n}\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AAEvBD,GAAG,CAACE,GAAG,CAACD,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACE,KAAK,CAAC;EAC5BC,KAAK,EAAE;IACLC,YAAY,EAAE,EAAE;IAChBC,gBAAgB,EAAE;EACpB,CAAC;EACDC,SAAS,EAAE;IACTC,iBAAiBA,CAACJ,KAAK,EAAEK,QAAQ,EAAE;MACjCL,KAAK,CAACC,YAAY,GAAGI,QAAQ;IAC/B,CAAC;IACDC,sBAAsBA,CAACN,KAAK,EAAEO,KAAK,EAAE;MACnCP,KAAK,CAACE,gBAAgB,GAAGK,KAAK;IAChC,CAAC;IACDC,kBAAkBA,CAACR,KAAK,EAAE;MAAEO,KAAK;MAAEE;IAAO,CAAC,EAAE;MAC3CT,KAAK,CAACC,YAAY,CAACM,KAAK,CAAC,CAACE,MAAM,GAAGA,MAAM;IAC3C;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAAC;MAAEC;IAAO,CAAC,EAAE;MACzB,MAAMP,QAAQ,GAAGQ,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,MAAM;QACpDC,EAAE,EAAED,CAAC,GAAG,CAAC;QACTR,MAAM,EAAE,SAAS;QACjBU,QAAQ,EAAE,IAAI;QAAE;QAChBC,MAAM,EAAEC,qBAAqB,CAAC,CAAC,CAAC;MAClC,CAAC,CAAC,CAAC;MACHT,MAAM,CAAC,mBAAmB,EAAEP,QAAQ,CAAC;MACrCO,MAAM,CAAC,wBAAwB,EAAE,CAAC,CAAC;IACrC,CAAC;IACDU,SAASA,CAAC;MAAEtB,KAAK;MAAEY,MAAM;MAAEW;IAAS,CAAC,EAAE;MACrC,IAAIvB,KAAK,CAACE,gBAAgB,GAAGF,KAAK,CAACC,YAAY,CAACc,MAAM,EAAE;QACtDH,MAAM,CAAC,oBAAoB,EAAE;UAAEL,KAAK,EAAEP,KAAK,CAACE,gBAAgB;UAAEO,MAAM,EAAE;QAAU,CAAC,CAAC;;QAElF;QACAe,UAAU,CAAC,MAAM;UACfZ,MAAM,CAAC,oBAAoB,EAAE;YAAEL,KAAK,EAAEP,KAAK,CAACE,gBAAgB;YAAEO,MAAM,EAAE;UAAW,CAAC,CAAC;UACnF,MAAMgB,aAAa,GAAGzB,KAAK,CAACE,gBAAgB,GAAG,CAAC;UAChD,IAAIuB,aAAa,GAAGzB,KAAK,CAACC,YAAY,CAACc,MAAM,EAAE;YAC7CH,MAAM,CAAC,wBAAwB,EAAEa,aAAa,CAAC;YAC/CF,QAAQ,CAAC,WAAW,CAAC;UACvB;QACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACZ;IACF;EACF,CAAC;EACDG,OAAO,EAAE,CACT;AACF,CAAC,CAAC;AAEF,SAASL,qBAAqBA,CAAA,EAAG;EAC/B;EACA,OAAO,CACL;IAAEH,EAAE,EAAE,CAAC;IAAES,KAAK,EAAE,YAAY;IAAEC,KAAK,EAAE,KAAK;IAAEC,QAAQ,EAAE;EAAE,CAAC,EACzD;IAAEX,EAAE,EAAE,CAAC;IAAES,KAAK,EAAE,YAAY;IAAEC,KAAK,EAAE,MAAM;IAAEC,QAAQ,EAAE;EAAE;EACzD;EAAA,CACD;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}