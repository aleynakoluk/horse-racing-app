{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4744db94\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"control-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.generateProgram && $options.generateProgram(...args)),\n    class: \"btn\"\n  }, \"GENERATE PROGRAM\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.toggleRace && $options.toggleRace(...args)),\n    class: \"btn\"\n  }, _toDisplayString($data.raceInProgress ? 'PAUSE' : 'START'), 1 /* TEXT */)]), _createCommentVNode(\" Diğer Vue bileşenleri ve içerikleri \")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_hoisted_1","onClick","_cache","args","$options","generateProgram","toggleRace","$data","raceInProgress","_createCommentVNode"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/components/ControlButtons.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"control-buttons\">\n      <button @click=\"generateProgram\" class=\"btn\">GENERATE PROGRAM</button>\n      <button @click=\"toggleRace\" class=\"btn\">{{ raceInProgress ? 'PAUSE' : 'START' }}</button>\n    </div>\n    <!-- Diğer Vue bileşenleri ve içerikleri -->\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex';\n\nexport default {\n  methods: {\n    ...mapActions(['generateHorses', 'startRace']),\n    generateProgram() {\n      this.generateHorses(); // Atları oluşturmak için Vuex action'ı çağır\n    },\n    toggleRace() {\n      if (this.raceInProgress) {\n        // Yarış devam ediyorsa durdur\n        clearInterval(this.intervalId);\n      } else {\n        // Yarış başlat\n        this.startRace();\n        this.intervalId = setInterval(this.updatePositions, 1000); // 1 saniyede bir pozisyon güncelle\n      }\n      this.raceInProgress = !this.raceInProgress; // Yarış durumu tersine çevir\n    },\n    updatePositions() {\n      // Her atın pozisyonunu güncelleme işlemi\n      this.raceSchedule.forEach((race, index) => {\n        race.horses.forEach(horse => {\n          const newPosition = horse.position + Math.random() * 10;\n          this.updateHorsePosition({ horseId: horse.id, position: newPosition });\n        });\n      });\n    }\n  },\n  data() {\n    return {\n      raceInProgress: false,\n      intervalId: null\n    };\n  },\n  computed: {\n    ...mapState(['raceSchedule'])\n  }\n};\n</script>\n\n<style scoped>\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  background-color: #FF9E8F;\n  padding: 10px;\n  width: 100vw; /* Sayfanın tam genişliğini alacak şekilde ayarlandı */\n}\n\n.title {\n  font-size: 24px;\n  font-weight: bold;\n  color: #333;\n  width: 100%; /* Başlık genişliğini tam ekran genişliği olarak ayarladı */\n}\n\n.control-buttons {\n  display: flex;\n  align-items: center;\n  width: 100%; /* Kontrol düğmelerinin genişliğini tam ekran genişliği olarak ayarladı */\n  justify-content: flex-end; /* Sağa doğru hizalama */\n}\n\n.btn {\n  margin: 0 10px;\n  padding: 10px 20px;\n  color: black;\n  background-color:  #d8d8d8fe;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.3s ease;\n}\n\n.btn:hover {\n  background-color: #969393;\n}\n\n/* Tablet ve daha büyük cihazlar için */\n@media (min-width: 600px) {\n  .header {\n    height: 60px;\n  }\n\n  .title {\n    font-size: 28px;\n  }\n\n  .btn {\n    margin: 0 15px;\n    padding: 10px 25px;\n    font-size: 16px;\n  }\n}\n\n/* Mobil cihazlar için */\n@media (max-width: 599px) {\n  .header {\n    flex-direction: column;\n    align-items: flex-start;\n    height: auto;\n  }\n\n  .title {\n    font-size: 20px;\n    margin-bottom: 10px;\n  }\n\n  .control-buttons {\n    flex-direction: column;\n    align-items: stretch;\n    width: 100%;\n    justify-content: flex-start; /* Mobilde düğmelerin üst üste gelmesi için */\n    margin-right: 5px;\n  }\n\n  .btn {\n    margin: 5px 0;\n    width: 100%;\n    text-align: right; /* Mobilde düğmeleri sağa doğru hizala */\n  }\n}\n</style>\n"],"mappings":";;;EAESA,KAAK,EAAC;AAAiB;;uBAD9BC,mBAAA,CAMM,cALJC,mBAAA,CAGM,OAHNC,UAGM,GAFJD,mBAAA,CAAsE;IAA7DE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;IAAEN,KAAK,EAAC;KAAM,kBAAgB,GAC7DE,mBAAA,CAAyF;IAAhFE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,UAAA,IAAAF,QAAA,CAAAE,UAAA,IAAAH,IAAA,CAAU;IAAEN,KAAK,EAAC;sBAASU,KAAA,CAAAC,cAAc,qC,GAE3DC,mBAAA,yCAA4C,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}