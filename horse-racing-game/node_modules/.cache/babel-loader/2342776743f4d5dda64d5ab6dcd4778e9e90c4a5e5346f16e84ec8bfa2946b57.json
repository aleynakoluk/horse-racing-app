{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\n// src/store/index.js\n\nimport { createStore } from 'vuex';\n\n// Atları oluşturacak fonksiyon\nfunction generateHorses() {\n  const horses = [];\n  for (let i = 1; i <= 20; i++) {\n    horses.push({\n      id: i,\n      color: getRandomColor(),\n      condition: Math.floor(Math.random() * 100) + 1,\n      position: 0,\n      image: require(`@/assets/horse${i}.png`)\n    });\n  }\n  return horses;\n}\n\n// Rastgele renk oluşturacak fonksiyon\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\n// Yerel depolama anahtarları\nconst LOCAL_STORAGE_KEY = 'horse-racing-game';\n\n// Yarış programını oluşturacak fonksiyon\nfunction generateRaceSchedule(horses) {\n  const distances = [1200, 1400, 1600, 1800, 2000, 2200];\n  const schedule = distances.map(distance => {\n    const selectedHorses = [];\n    const horseIds = new Set();\n\n    // 10 at seçmek için döngü\n    for (let i = 1; i <= 10; i++) {\n      let horse;\n      do {\n        horse = horses[Math.floor(Math.random() * horses.length)];\n      } while (horseIds.has(horse.id));\n      selectedHorses.push(horse);\n      horseIds.add(horse.id);\n    }\n    return {\n      distance,\n      horses: selectedHorses\n    };\n  });\n  return schedule;\n}\nexport default createStore({\n  state: {\n    horses: [],\n    raceSchedule: [],\n    raceResults: [],\n    racing: false,\n    generatingHorses: false\n  },\n  mutations: {\n    setHorses(state, horses) {\n      state.horses = horses;\n    },\n    setRaceSchedule(state, schedule) {\n      state.raceSchedule = schedule;\n    },\n    updateHorsePosition(state, {\n      horseId,\n      position\n    }) {\n      const horse = state.horses.find(h => h.id === horseId);\n      if (horse) {\n        horse.position = position;\n      }\n    },\n    addRaceResult(state, result) {\n      state.raceResults.push(result);\n    },\n    clearRaceResults(state) {\n      state.raceResults = [];\n    },\n    setRacing(state, status) {\n      state.racing = status;\n    },\n    setGeneratingHorses(state, status) {\n      state.generatingHorses = status;\n    }\n  },\n  actions: {\n    initializeGame({\n      commit\n    }) {\n      // Oyun başlatılırken atları oluştur ve yerel depolamaya kaydet\n      const storedHorses = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n      if (storedHorses) {\n        commit('setHorses', storedHorses);\n      } else {\n        const horses = generateHorses();\n        commit('setHorses', horses);\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(horses));\n      }\n    },\n    startRace({\n      commit,\n      state\n    }) {\n      if (state.racing) {\n        return;\n      }\n      commit('clearRaceResults');\n      commit('setRacing', true);\n      const schedule = generateRaceSchedule(state.horses);\n      commit('setRaceSchedule', schedule);\n      schedule.forEach((race, index) => {\n        setTimeout(() => {\n          race.horses.forEach(horse => {\n            const newPosition = horse.position + Math.random() * 10;\n            commit('updateHorsePosition', {\n              horseId: horse.id,\n              position: newPosition\n            });\n          });\n          const winner = race.horses.reduce((prev, current) => prev.position > current.position ? prev : current);\n          const result = `Winner: Horse ${winner.id}`;\n          commit('addRaceResult', result);\n        }, index * 5000);\n      });\n      setTimeout(() => {\n        commit('setRacing', false);\n      }, schedule.length * 5000);\n    },\n    stopRace({\n      commit\n    }) {\n      commit('setRacing', false);\n    },\n    generateAndStartRace({\n      dispatch,\n      commit\n    }) {\n      dispatch('initializeGame');\n      commit('setGeneratingHorses', true);\n      setTimeout(() => {\n        commit('setGeneratingHorses', false);\n        dispatch('startRace');\n      }, 1000);\n    }\n  }\n});","map":{"version":3,"names":["createStore","generateHorses","horses","i","push","id","color","getRandomColor","condition","Math","floor","random","position","image","require","letters","LOCAL_STORAGE_KEY","generateRaceSchedule","distances","schedule","map","distance","selectedHorses","horseIds","Set","horse","length","has","add","state","raceSchedule","raceResults","racing","generatingHorses","mutations","setHorses","setRaceSchedule","updateHorsePosition","horseId","find","h","addRaceResult","result","clearRaceResults","setRacing","status","setGeneratingHorses","actions","initializeGame","commit","storedHorses","JSON","parse","localStorage","getItem","setItem","stringify","startRace","forEach","race","index","setTimeout","newPosition","winner","reduce","prev","current","stopRace","generateAndStartRace","dispatch"],"sources":["/Users/aleynakoluk/Desktop/horse-racing-game/src/store/index.js"],"sourcesContent":["// src/store/index.js\n\nimport { createStore } from 'vuex';\n\n// Atları oluşturacak fonksiyon\nfunction generateHorses() {\n  const horses = [];\n  for (let i = 1; i <= 20; i++) {\n    horses.push({\n      id: i,\n      color: getRandomColor(),\n      condition: Math.floor(Math.random() * 100) + 1,\n      position: 0,\n      image: require(`@/assets/horse${i}.png`),\n    });\n  }\n  return horses;\n}\n\n// Rastgele renk oluşturacak fonksiyon\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\n// Yerel depolama anahtarları\nconst LOCAL_STORAGE_KEY = 'horse-racing-game';\n\n// Yarış programını oluşturacak fonksiyon\nfunction generateRaceSchedule(horses) {\n  const distances = [1200, 1400, 1600, 1800, 2000, 2200];\n  const schedule = distances.map(distance => {\n    const selectedHorses = [];\n    const horseIds = new Set();\n\n    // 10 at seçmek için döngü\n    for (let i = 1; i <= 10; i++) {\n      let horse;\n      do {\n        horse = horses[Math.floor(Math.random() * horses.length)];\n      } while (horseIds.has(horse.id));\n      selectedHorses.push(horse);\n      horseIds.add(horse.id);\n    }\n\n    return {\n      distance,\n      horses: selectedHorses,\n    };\n  });\n  return schedule;\n}\n\nexport default createStore({\n  state: {\n    horses: [],\n    raceSchedule: [],\n    raceResults: [],\n    racing: false,\n    generatingHorses: false,\n  },\n  mutations: {\n    setHorses(state, horses) {\n      state.horses = horses;\n    },\n    setRaceSchedule(state, schedule) {\n      state.raceSchedule = schedule;\n    },\n    updateHorsePosition(state, { horseId, position }) {\n      const horse = state.horses.find(h => h.id === horseId);\n      if (horse) {\n        horse.position = position;\n      }\n    },\n    addRaceResult(state, result) {\n      state.raceResults.push(result);\n    },\n    clearRaceResults(state) {\n      state.raceResults = [];\n    },\n    setRacing(state, status) {\n      state.racing = status;\n    },\n    setGeneratingHorses(state, status) {\n      state.generatingHorses = status;\n    },\n  },\n  actions: {\n    initializeGame({ commit }) {\n      // Oyun başlatılırken atları oluştur ve yerel depolamaya kaydet\n      const storedHorses = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n      if (storedHorses) {\n        commit('setHorses', storedHorses);\n      } else {\n        const horses = generateHorses();\n        commit('setHorses', horses);\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(horses));\n      }\n    },\n    startRace({ commit, state }) {\n      if (state.racing) {\n        return;\n      }\n      commit('clearRaceResults');\n      commit('setRacing', true);\n      const schedule = generateRaceSchedule(state.horses);\n      commit('setRaceSchedule', schedule);\n\n      schedule.forEach((race, index) => {\n        setTimeout(() => {\n          race.horses.forEach(horse => {\n            const newPosition = horse.position + Math.random() * 10;\n            commit('updateHorsePosition', { horseId: horse.id, position: newPosition });\n          });\n          const winner = race.horses.reduce((prev, current) => (prev.position > current.position) ? prev : current);\n          const result = `Winner: Horse ${winner.id}`;\n          commit('addRaceResult', result);\n        }, index * 5000);\n      });\n\n      setTimeout(() => {\n        commit('setRacing', false);\n      }, schedule.length * 5000);\n    },\n    stopRace({ commit }) {\n      commit('setRacing', false);\n    },\n    generateAndStartRace({ dispatch, commit }) {\n      dispatch('initializeGame');\n      commit('setGeneratingHorses', true);\n      setTimeout(() => {\n        commit('setGeneratingHorses', false);\n        dispatch('startRace');\n      }, 1000);\n    },\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}